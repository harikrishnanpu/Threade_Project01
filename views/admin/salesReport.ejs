<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Report - Admin Dashboard</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.css">
  
  <style>

:root {
      --primary: #007bff;
      --primary-dark: #0056b3;
      --success: #28a745;
      --danger: #dc3545;
      --warning: #ffc107;
      --info: #17a2b8;
      --light: #f8f9fa;
      --dark: #343a40;
      --border-color: #dee2e6;
      --text-muted: #6c757d;
      --shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
      --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      background-color: var(--light);
      color: var(--dark);
      line-height: 1.5;
    }

    .container-fluid {
      padding: 0 15px;
      max-width: 1400px;
      margin: 0 auto;
    }

    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.9);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .loading-overlay.active {
      opacity: 1;
      visibility: visible;
    }

    .loading-spinner {
      text-align: center;
    }

    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f3f3;
      border-top: 4px solid var(--primary);
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 16px;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Page header */
    .page-header {
      background: white;
      padding: 20px 0;
      margin-bottom: 30px;
      border-radius: 8px;
      box-shadow: var(--shadow);
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 15px;
    }

    .page-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--dark);
      margin: 0;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .header-actions {
      display: flex;
      gap: 10px;
      align-items: center;
    }

    /* Stats cards */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .stat-card {
      background: white;
      padding: 25px;
      border-radius: 12px;
      box-shadow: var(--shadow);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      position: relative;
      overflow: hidden;
    }

    .stat-card:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    .stat-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background: var(--primary);
    }

    .stat-card.success::before { background: var(--success); }
    .stat-card.warning::before { background: var(--warning); }
    .stat-card.danger::before { background: var(--danger); }
    .stat-card.info::before { background: var(--info); }

    .stat-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }

    .stat-title {
      font-size: 14px;
      font-weight: 500;
      color: var(--text-muted);
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .stat-icon {
      width: 40px;
      height: 40px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 18px;
      color: white;
    }

    .stat-icon.primary { background: var(--primary); }
    .stat-icon.success { background: var(--success); }
    .stat-icon.warning { background: var(--warning); }
    .stat-icon.danger { background: var(--danger); }
    .stat-icon.info { background: var(--info); }

    .stat-value {
      font-size: 28px;
      font-weight: 700;
      color: var(--dark);
      margin-bottom: 5px;
    }

    .stat-change {
      font-size: 12px;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .stat-change.positive { color: var(--success); }
    .stat-change.negative { color: var(--danger); }
    .stat-change.neutral { color: var(--text-muted); }

    /* Main content */
    .card-style {
      background: white;
      border-radius: 12px;
      box-shadow: var(--shadow);
      overflow: hidden;
    }

    .mb-30 {
      margin-bottom: 30px;
    }

    /* Controls */
    .table-controls {
      padding: 25px;
      border-bottom: 1px solid var(--border-color);
      background: #f8f9fa;
    }

    .controls-row {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      align-items: end;
    }

    .filters-section {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      flex: 1;
    }

    .filter-group {
      display: flex;
      flex-direction: column;
      gap: 5px;
      min-width: 150px;
    }

    .filter-label {
      font-size: 12px;
      font-weight: 600;
      color: var(--text-muted);
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .form-select, .form-control {
      padding: 8px 12px;
      border: 1px solid var(--border-color);
      border-radius: 6px;
      font-size: 14px;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      background: white;
    }

    .form-select:focus, .form-control:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .date-range-inputs {
      display: flex;
      gap: 10px;
      align-items: center;
    }

    .date-range-inputs input {
      flex: 1;
      min-width: 140px;
    }

    .actions-section {
      display: flex;
      gap: 10px;
      align-items: end;
    }

    /* Buttons */
    .btn {
      padding: 8px 16px;
      border: 1px solid transparent;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 500;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
      transition: all 0.2s ease;
      white-space: nowrap;
    }

    .btn-primary {
      background: var(--primary);
      color: white;
      border-color: var(--primary);
    }

    .btn-primary:hover {
      background: var(--primary-dark);
      border-color: var(--primary-dark);
    }

    .btn-success {
      background: var(--success);
      color: white;
      border-color: var(--success);
    }

    .btn-success:hover {
      background: #218838;
      border-color: #1e7e34;
    }

    .btn-outline-primary {
      background: transparent;
      color: var(--primary);
      border-color: var(--primary);
    }

    .btn-outline-primary:hover {
      background: var(--primary);
      color: white;
    }

    .btn-outline-secondary {
      background: transparent;
      color: var(--text-muted);
      border-color: var(--border-color);
    }

    .btn-outline-secondary:hover {
      background: var(--light);
      color: var(--dark);
    }

    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    /* Charts section */
    .charts-section {
      padding: 25px;
      border-bottom: 1px solid var(--border-color);
    }

    .charts-grid {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: 30px;
      margin-bottom: 30px;
    }

    .chart-container {
      position: relative;
      height: 400px;
    }

    .chart-title {
      font-size: 16px;
      font-weight: 600;
      margin-bottom: 15px;
      color: var(--dark);
    }

    /* Table */
    .table-wrapper {
      overflow-x: auto;
    }

    .table-container {
      min-width: 800px;
    }

    .table {
      width: 100%;
      border-collapse: collapse;
      font-size: 14px;
    }

    .table th {
      background: #f8f9fa;
      padding: 15px 12px;
      text-align: left;
      font-weight: 600;
      color: var(--dark);
      border-bottom: 2px solid var(--border-color);
      white-space: nowrap;
    }

    .table td {
      padding: 15px 12px;
      border-bottom: 1px solid var(--border-color);
      vertical-align: middle;
    }

    .table tbody tr:hover {
      background: #f8f9fa;
    }

    .sortable-header {
      cursor: pointer;
      user-select: none;
      transition: background-color 0.2s ease;
    }

    .sortable-header:hover {
      background: #e9ecef;
    }

    .header-content {
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 8px;
    }

    .sort-indicator {
      font-size: 12px;
      color: var(--primary);
    }

    /* Pagination */
    .table-navigator {
      padding: 20px 25px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 15px;
      background: #f8f9fa;
    }

    .pagination-controls {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .nav-btn {
      padding: 8px 12px;
      font-size: 14px;
    }

    .page-info {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 14px;
    }

    .page-input {
      width: 60px;
      text-align: center;
      padding: 4px 8px;
      border: 1px solid var(--border-color);
      border-radius: 4px;
    }

    /* Messages */
    .error-msg, .success-msg {
      padding: 12px 16px;
      border-radius: 6px;
      margin: 15px 25px;
      font-size: 14px;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      transform: translateY(-10px);
    }

    .error-msg.show, .success-msg.show {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .error-msg {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }

    .success-msg {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    /* No data state */
    .no-data-content {
      text-align: center;
      padding: 60px 20px;
      color: var(--text-muted);
    }

    .no-data-icon {
      font-size: 48px;
      margin-bottom: 20px;
      opacity: 0.5;
    }

    /* Export dropdown */
    .export-dropdown {
      position: relative;
      display: inline-block;
    }

    .export-menu {
      display: none;
      position: absolute;
      top: 100%;
      right: 0;
      background: white;
      border: 1px solid var(--border-color);
      border-radius: 6px;
      box-shadow: var(--shadow-lg);
      z-index: 1000;
      min-width: 150px;
      margin-top: 5px;
    }

    .export-dropdown:hover .export-menu {
      display: block;
    }

    .export-item {
      display: block;
      padding: 10px 15px;
      color: var(--dark);
      text-decoration: none;
      font-size: 14px;
      transition: background-color 0.2s ease;
    }

    .export-item:hover {
      background: var(--light);
    }

    .export-item i {
      width: 16px;
      margin-right: 8px;
    }

    /* Responsive design */
    @media (max-width: 1200px) {
      .charts-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 768px) {
      .container-fluid {
        padding: 0 10px;
      }

      .page-header {
        flex-direction: column;
        align-items: stretch;
        text-align: center;
      }

      .stats-grid {
        grid-template-columns: 1fr;
      }

      .controls-row {
        flex-direction: column;
        align-items: stretch;
      }

      .filters-section {
        flex-direction: column;
      }

      .filter-group {
        min-width: auto;
      }

      .date-range-inputs {
        flex-direction: column;
      }

      .date-range-inputs input {
        min-width: auto;
      }

      .actions-section {
        justify-content: center;
      }

      .table-navigator {
        flex-direction: column;
        gap: 15px;
      }

      .pagination-controls {
        justify-content: center;
      }

      .btn-text {
        display: none;
      }

      .chart-container {
        height: 300px;
      }
    }

    @media (max-width: 576px) {
      .page-title {
        font-size: 20px;
      }

      .stat-card {
        padding: 20px;
      }

      .stat-value {
        font-size: 24px;
      }

      .table-controls {
        padding: 20px;
      }

      .charts-section {
        padding: 20px;
      }

      .table-navigator {
        padding: 15px 20px;
      }
    }

    /* Custom date range styles */
    .custom-date-section {
      display: none;
      margin-top: 15px;
      padding: 15px;
      background: white;
      border: 1px solid var(--border-color);
      border-radius: 6px;
    }

    .custom-date-section.show {
      display: block;
    }

    .date-range-label {
      font-size: 12px;
      font-weight: 600;
      color: var(--text-muted);
      margin-bottom: 8px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Loading states for buttons */
    .btn.loading {
      position: relative;
      color: transparent;
    }

    .btn.loading::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 16px;
      height: 16px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    .btn-primary.loading::after {
      border-top-color: white;
    }

    /* Table cell specific styles */
    .order-date {
      font-family: 'Courier New', monospace;
      font-size: 13px;
    }

    .amount-cell {
      font-weight: 600;
      color: var(--success);
    }

    .discount-cell {
      color: var(--warning);
      font-weight: 500;
    }

    .status-badge {
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
    }

    .status-completed {
      background: #d4edda;
      color: #155724;
    }

    .status-pending {
      background: #fff3cd;
      color: #856404;
    }

    .status-cancelled {
      background: #f8d7da;
      color: #721c24;
    }
  </style>
</head>
<body>
  <!-- Loading overlay -->
  <div class="loading-overlay" id="loading-overlay">
    <div class="loading-spinner">
      <div class="spinner"></div>
      <p>Loading...</p>
    </div>
  </div>

  <div class="container-fluid">


    <div class="page-header">
      <h1 class="page-title">
        <i class="fas fa-chart-line"></i>
        Sales Report
      </h1>
      <div class="header-actions">
        <div class="export-dropdown">
          <button class="btn btn-success" id="export-btn">
            <i class="fas fa-download"></i>
            <span class="btn-text">Export Report</span>
            <i class="fas fa-chevron-down"></i>
          </button>
          <div class="export-menu">
            <a href="#" class="export-item" onclick="exportReport('pdf')">
              <i class="fas fa-file-pdf"></i>
              Export as PDF
            </a>
            <a href="#" class="export-item" onclick="exportReport('excel')">
              <i class="fas fa-file-excel"></i>
              Export as Excel
            </a>
          </div>
        </div>
      </div>
    </div>



    <p class="error-msg" id="error-msg"></p>
    <p class="success-msg" id="success-msg"></p>



    <div class="stats-grid">
      <div class="stat-card primary">
        <div class="stat-header">
          <div class="stat-title">Total Sales</div>
          <div class="stat-icon primary">
            <i class="fas fa-chart-line"></i>
          </div>
        </div>
        <div class="stat-value" id="total-sales">₹<%= totalSales ? totalSales.toFixed(2) : '0.00' %></div>
        <div class="stat-change positive" id="sales-change">
          <i class="fas fa-arrow-up"></i>
          <span>+12.5% from last period</span>
        </div>
      </div>

      <div class="stat-card success">
        <div class="stat-header">
          <div class="stat-title">Total Orders</div>
          <div class="stat-icon success">
            <i class="fas fa-shopping-cart"></i>
          </div>
        </div>
        <div class="stat-value" id="total-orders"><%= totalOrders || 0 %></div>
        <div class="stat-change positive" id="orders-change">
          <i class="fas fa-arrow-up"></i>
          <span>+8.2% from last period</span>
        </div>
      </div>

      <div class="stat-card warning">
        <div class="stat-header">
          <div class="stat-title">Total Discounts</div>
          <div class="stat-icon warning">
            <i class="fas fa-tags"></i>
          </div>
        </div>
        <div class="stat-value" id="total-discounts">₹<%= totalDiscounts ? totalDiscounts.toFixed(2) : '0.00' %></div>
        <div class="stat-change neutral" id="discounts-change">
          <i class="fas fa-minus"></i>
          <span>-2.1% from last period</span>
        </div>
      </div>

      <div class="stat-card info">
        <div class="stat-header">
          <div class="stat-title">Average Order Value</div>
          <div class="stat-icon info">
            <i class="fas fa-calculator"></i>
          </div>
        </div>
        <div class="stat-value" id="avg-order-value">₹<%= avgOrderValue ? avgOrderValue.toFixed(2) : '0.00' %></div>
        <div class="stat-change positive" id="aov-change">
          <i class="fas fa-arrow-up"></i>
          <span>+5.7% from last period</span>
        </div>
      </div>
    </div>


    <div class="card-style mb-30">
      <div class="table-controls">
        <div class="controls-row">
          <div class="filters-section">

            <div class="filter-group">
              <label class="filter-label">Report Period</label>
              <select class="form-select" id="date-range-filter">
                <option value="today" <%= dateRange === 'today' ? 'selected' : '' %>>Today</option>
                <option value="yesterday" <%= dateRange === 'yesterday' ? 'selected' : '' %>>Yesterday</option>
                <option value="week" <%= dateRange === 'week' ? 'selected' : '' %>>This Week</option>
                <option value="last-week" <%= dateRange === 'last-week' ? 'selected' : '' %>>Last Week</option>
                <option value="month" <%= dateRange === 'month' ? 'selected' : '' %>>This Month</option>
                <option value="last-month" <%= dateRange === 'last-month' ? 'selected' : '' %>>Last Month</option>
                <option value="quarter" <%= dateRange === 'quarter' ? 'selected' : '' %>>This Quarter</option>
                <option value="year" <%= dateRange === 'year' ? 'selected' : '' %>>This Year</option>
                <option value="custom" <%= dateRange === 'custom' ? 'selected' : '' %>>Custom Range</option>
              </select>
            </div>

            <!-- Status Filter -->
            <div class="filter-group">
              <label class="filter-label">Order Status</label>
              <select class="form-select" id="status-filter">
                <option value="all" <%= status === 'all' ? 'selected' : '' %>>All Orders</option>
                <option value="completed" <%= status === 'completed' ? 'selected' : '' %>>Completed</option>
                <option value="delivered" <%= status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                <option value="cancelled" <%= status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                <option value="returned" <%= status === 'returned' ? 'selected' : '' %>>Returned</option>
              </select>
            </div>

            <!-- Payment Method Filter -->
            <div class="filter-group">
              <label class="filter-label">Payment Method</label>
              <select class="form-select" id="payment-filter">
                <option value="all" <%= paymentMethod === 'all' ? 'selected' : '' %>>All Methods</option>
                <option value="online" <%= paymentMethod === 'online' ? 'selected' : '' %>>Online Payment</option>
                <option value="cod" <%= paymentMethod === 'cod' ? 'selected' : '' %>>Cash on Delivery</option>
              </select>
            </div>

            <!-- Category Filter -->
            <div class="filter-group">
              <label class="filter-label">Category</label>
              <select class="form-select" id="category-filter">
                <option value="all" <%= category === 'all' ? 'selected' : '' %>>All Categories</option>
                <% if (categories && categories.length > 0) { %>
                  <% categories.forEach(cat => { %>
                    <option value="<%= cat._id %>" <%= category === cat._id ? 'selected' : '' %>><%= cat.name %></option>
                  <% }) %>
                <% } %>
              </select>
            </div>
          </div>

          <div class="actions-section">
            <button class="btn btn-outline-secondary" id="reset-filters">
              <i class="fas fa-undo"></i>
              <span class="btn-text">Reset</span>
            </button>
            <button class="btn btn-primary" id="apply-filters">
              <i class="fas fa-filter"></i>
              <span class="btn-text">Apply Filters</span>
            </button>
          </div>
        </div>

        <!-- Custom Date Range -->
        <div class="custom-date-section" id="custom-date-section">
          <div class="date-range-label">Custom Date Range</div>
          <div class="date-range-inputs">
            <input type="date" class="form-control" id="start-date" value="<%= startDate || '' %>">
            <span>to</span>
            <input type="date" class="form-control" id="end-date" value="<%= endDate || '' %>">
            <button class="btn btn-primary" id="apply-custom-date">
              <i class="fas fa-calendar-check"></i>
              Apply
            </button>
          </div>
        </div>
      </div>

      <!-- Charts Section -->
      <div class="charts-section">
        <div class="charts-grid">
          <div>
            <h3 class="chart-title">Sales Trend</h3>
            <div class="chart-container">
              <canvas id="salesChart"></canvas>
            </div>
          </div>
          <div>
            <h3 class="chart-title">Payment Methods</h3>
            <div class="chart-container">
              <canvas id="paymentChart"></canvas>
            </div>
          </div>
        </div>
      </div>

      <!-- Table -->
      <div class="table-wrapper">
        <div class="table-container">
          <table class="table" id="sales-table">
            <% if (salesData && salesData.length > 0) { %>
            <thead>
              <tr>
                <th class="sortable-header" onclick="setSortField('orderDate')">
                  <div class="header-content">
                    <span>Date</span>
                    <% if (sortField === 'orderDate') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th class="sortable-header" onclick="setSortField('orderNumber')">
                  <div class="header-content">
                    <span>Order ID</span>
                    <% if (sortField === 'orderNumber') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th class="sortable-header" onclick="setSortField('customerName')">
                  <div class="header-content">
                    <span>Customer</span>
                    <% if (sortField === 'customerName') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th class="sortable-header" onclick="setSortField('totalAmount')">
                  <div class="header-content">
                    <span>Order Amount</span>
                    <% if (sortField === 'totalAmount') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th class="sortable-header" onclick="setSortField('discountAmount')">
                  <div class="header-content">
                    <span>Discount</span>
                    <% if (sortField === 'discountAmount') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th class="sortable-header" onclick="setSortField('finalAmount')">
                  <div class="header-content">
                    <span>Final Amount</span>
                    <% if (sortField === 'finalAmount') { %>
                      <span class="sort-indicator">
                        <%= sortOrder === 'asc' ? '↑' : '↓' %>
                      </span>
                    <% } %>
                  </div>
                </th>
                <th>Payment Method</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              <% salesData.forEach((order) => { %>
              <tr>
                <td class="order-date">
                  <%= new Date(order.createdAt).toLocaleDateString() %>
                  <br>
                  <small class="text-muted">
                    <%= new Date(order.createdAt).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %>
                  </small>
                </td>
                <td>
                  <strong>#<%= order.orderNumber %></strong>
                </td>
                <td>
                  <div>
                    <strong><%= order.user.name %></strong>
                    <br>
                    <small class="text-muted"><%= order.user.email %></small>
                  </div>
                </td>
                <td class="amount-cell">
                  ₹<%= order.totalAmount.toFixed(2) %>
                </td>
                <td class="discount-cell">
                  <% if (order.coupon && order.coupon.discountAmount > 0) { %>
                    -₹<%= order.coupon.discountAmount.toFixed(2) %>
                    <br>
                    <small class="text-muted">(<%= order.coupon.code %>)</small>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td class="amount-cell">
                  <strong>₹<%= (order.totalAmount - (order.coupon ? order.coupon.discountAmount : 0)).toFixed(2) %></strong>
                </td>
                <td>
                  <span class="badge badge-<%= order.paymentMethod %>">
                    <%= order.paymentMethod.toUpperCase() %>
                  </span>
                </td>
                <td>
                  <span class="status-badge status-<%= order.orderStatus %>">
                    <%= order.orderStatus %>
                  </span>
                </td>
              </tr>
              <% }) %>
            </tbody>
            <% } else { %>
            <tbody>
              <tr>
                <td colspan="8">
                  <div class="no-data-content">
                    <div class="no-data-icon">
                      <i class="fas fa-chart-line"></i>
                    </div>
                    <h4>No Sales Data Found</h4>
                    <p>No sales data available for the selected period and filters.</p>
                    <button class="btn btn-primary" onclick="resetFilters()">
                      <i class="fas fa-undo"></i>
                      Reset Filters
                    </button>
                  </div>
                </td>
              </tr>
            </tbody>
            <% } %>
          </table>
        </div>
      </div>

      <!-- Pagination -->
      <div class="table-navigator">
        <div class="pagination-info">
          <span>Showing <%= salesData ? salesData.length : 0 %> of <%= totalRecords || 0 %> records</span>
        </div>
        <div class="pagination-controls">
          <button class="btn btn-outline-primary nav-btn" 
                  id="prev-btn"
                  <%= currentPage <= 1 ? 'disabled' : '' %>
                  onclick="goToPage(<%= currentPage - 1 %>)">
            <i class="fas fa-chevron-left"></i>
            <span class="btn-text">Previous</span>
          </button>
          
          <div class="page-info">
            <span class="page-label">Page</span>
            <input type="number" 
                   min="1" 
                   max="<%= totalPages || 1 %>"
                   id="page-number"
                   class="page-input" 
                   value="<%= currentPage || 1 %>"
                   onchange="goToPage(this.value)" />
            <span class="page-total">of <%= totalPages || 1 %></span>
          </div>
          
          <button class="btn btn-outline-primary nav-btn" 
                  id="next-btn"
                  <%= currentPage >= (totalPages || 1) ? 'disabled' : '' %>
                  onclick="goToPage(<%= currentPage + 1 %>)">
            <span class="btn-text">Next</span>
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Chart.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
  
  <script>
    // Global state
    const STATE = {
      page: parseInt('<%= currentPage %>') || 1,
      dateRange: '<%= dateRange %>' || 'month',
      status: '<%= status %>' || 'all',
      paymentMethod: '<%= paymentMethod %>' || 'all',
      category: '<%= category %>' || 'all',
      sortField: '<%= sortField %>' || 'orderDate',
      sortOrder: '<%= sortOrder %>' || 'desc',
      startDate: '<%= startDate %>' || '',
      endDate: '<%= endDate %>' || '',
      isLoading: false
    };

    // Chart instances
    let salesChart = null;
    let paymentChart = null;

    // Utility functions
    function showLoading() {
      STATE.isLoading = true;
      document.getElementById('loading-overlay').classList.add('active');
    }

    function hideLoading() {
      STATE.isLoading = false;
      document.getElementById('loading-overlay').classList.remove('active');
    }

    function showError(message) {
      const errorMsg = document.getElementById('error-msg');
      errorMsg.textContent = message;
      errorMsg.classList.add('show');
      setTimeout(() => {
        errorMsg.classList.remove('show');
      }, 5000);
    }

    function showSuccess(message) {
      const successMsg = document.getElementById('success-msg');
      successMsg.textContent = message;
      successMsg.classList.add('show');
      setTimeout(() => {
        successMsg.classList.remove('show');
      }, 3000);
    }

    // URL building and navigation
    function buildUrl(overrides = {}) {
      const params = {
        page: overrides.page || STATE.page,
        dateRange: overrides.dateRange || STATE.dateRange,
        status: overrides.status || STATE.status,
        paymentMethod: overrides.paymentMethod || STATE.paymentMethod,
        category: overrides.category || STATE.category,
        sortField: overrides.sortField || STATE.sortField,
        sortOrder: overrides.sortOrder || STATE.sortOrder,
        startDate: overrides.startDate || STATE.startDate,
        endDate: overrides.endDate || STATE.endDate
      };

      // Remove default/empty values
      Object.keys(params).forEach(key => {
        if (params[key] === '' || params[key] === null || params[key] === undefined || 
            params[key] === 'all' || params[key] === 'month') {
          delete params[key];
        }
      });

      const url = new URL(window.location.pathname, window.location.origin);
      Object.keys(params).forEach(key => {
        url.searchParams.set(key, params[key]);
      });

      return url.toString();
    }

    function navigateToUrl(url) {
      showLoading();
      window.location.href = url;
    }

    // Filter functions
    function applyFilters() {
      const dateRange = document.getElementById('date-range-filter').value;
      const status = document.getElementById('status-filter').value;
      const paymentMethod = document.getElementById('payment-filter').value;
      const category = document.getElementById('category-filter').value;

      let params = {
        page: 1,
        dateRange,
        status,
        paymentMethod,
        category
      };

      if (dateRange === 'custom') {
        const startDate = document.getElementById('start-date').value;
        const endDate = document.getElementById('end-date').value;
        
        if (!startDate || !endDate) {
          showError('Please select both start and end dates for custom range');
          return;
        }
        
        if (new Date(startDate) > new Date(endDate)) {
          showError('Start date cannot be after end date');
          return;
        }

        params.startDate = startDate;
        params.endDate = endDate;
      }

      navigateToUrl(buildUrl(params));
    }

    function resetFilters() {
      navigateToUrl(buildUrl({
        page: 1,
        dateRange: 'month',
        status: 'all',
        paymentMethod: 'all',
        category: 'all',
        sortField: 'orderDate',
        sortOrder: 'desc',
        startDate: '',
        endDate: ''
      }));
    }

    function setSortField(field) {
      const newOrder = (STATE.sortField === field && STATE.sortOrder === 'asc') ? 'desc' : 'asc';
      navigateToUrl(buildUrl({ 
        sortField: field, 
        sortOrder: newOrder, 
        page: 1 
      }));
    }

    function goToPage(page) {
      const pageNum = parseInt(page);
      const maxPages = parseInt('<%= totalPages %>') || 1;
      if (pageNum < 1 || pageNum > maxPages) return;
      
      navigateToUrl(buildUrl({ page: pageNum }));
    }

    // Export functions
    async function exportReport(format) {
      const btn = document.getElementById('export-btn');
      btn.classList.add('loading');
      
      try {
        const params = new URLSearchParams(window.location.search);
        params.set('export', format);
        
        const response = await fetch(`${window.location.pathname}?${params.toString()}`);
        
        if (response.ok) {
          const blob = await response.blob();
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = `sales-report-${new Date().toISOString().split('T')[0]}.${format === 'pdf' ? 'pdf' : 'xlsx'}`;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          window.URL.revokeObjectURL(url);
          
          showSuccess(`Report exported successfully as ${format.toUpperCase()}`);
        } else {
          throw new Error('Export failed');
        }
      } catch (error) {
        showError('Failed to export report. Please try again.');
      } finally {
        btn.classList.remove('loading');
      }
    }

    function initializeCharts() {

        const salesCtx = document.getElementById('salesChart');
      if (salesCtx) {
        salesChart = new Chart(salesCtx, {
          type: 'line',
          data: {
            labels: <%- JSON.stringify(chartData?.salesTrend?.labels || []) %>,
            datasets: [{
              label: 'Sales Amount',
              data: <%- JSON.stringify(chartData?.salesTrend?.data || []) %>,
              borderColor: '#007bff',
              backgroundColor: 'rgba(0, 123, 255, 0.1)',
              tension: 0.4,
              fill: true
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                display: false
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                  callback: function(value) {
                    return '₹' + value.toLocaleString();
                  }
                }
              }
            }
          }
        });
      }

      
      const paymentCtx = document.getElementById('paymentChart');
      if (paymentCtx) {
        paymentChart = new Chart(paymentCtx, {
          type: 'doughnut',
          data: {
            labels: <%- JSON.stringify(chartData?.paymentMethods?.labels || []) %>,
            datasets: [{
              data: <%- JSON.stringify(chartData?.paymentMethods?.data || []) %>,
              backgroundColor: [
                '#007bff',
                '#28a745',
                '#ffc107',
                '#dc3545'
              ]
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom'
              }
            }
          }
        });
      }
    }

    document.addEventListener('DOMContentLoaded', function() {

        initializeCharts();

      document.getElementById('date-range-filter').addEventListener('change', function(e) {
        const customSection = document.getElementById('custom-date-section');
        if (e.target.value === 'custom') {
          customSection.classList.add('show');
        } else {
          customSection.classList.remove('show');
        }
      });

      // Show custom date section if already selected
      if (STATE.dateRange === 'custom') {
        document.getElementById('custom-date-section').classList.add('show');
      }

      // Filter buttons
      document.getElementById('apply-filters').addEventListener('click', applyFilters);
      document.getElementById('reset-filters').addEventListener('click', resetFilters);
      document.getElementById('apply-custom-date').addEventListener('click', applyFilters);

      // Auto-apply filters on change (except custom date)
      ['status-filter', 'payment-filter', 'category-filter'].forEach(id => {
        document.getElementById(id).addEventListener('change', applyFilters);
      });

      document.getElementById('date-range-filter').addEventListener('change', function(e) {
        if (e.target.value !== 'custom') {
          applyFilters();
        }
      });
    });

    // Page load
    window.addEventListener('load', function() {
      hideLoading();
    });

    // Prevent navigation during loading
    window.addEventListener('popstate', function() {
      if (!STATE.isLoading) {
        window.location.reload();
      }
    });
  </script>
</body>
</html>