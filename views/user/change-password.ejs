<link rel="stylesheet" href="/css/login.css">


<section class="login-section">
  <div class="login-box">
    <h2>Reset Password</h2>
    <p class="login-sub">Create a new password for your account</p>
    <form id="change-password-form">


      <div class="input-group floating">
        <input type="password" name="password" id="password" placeholder=" " />
        <label for="password">New Password</label>
        <p id="password-input-error" class="error-msg-input"></p>
        <span class="toggle-password" onclick="togglePwd('password', this)">show</span>
      </div>

      <div class="input-group floating">
        <input type="password" name="confirmPassword" id="confirm-password" placeholder=" " />
        <label for="confirm-password">Confirm Password</label>
        <p id="confirmpassword-input-error" class="error-msg-input"></p>
        <span class="toggle-password" onclick="togglePwd('confirm-password', this)">show</span>
      </div>

      <button type="submit" class="login-btn primary">Change Password</button>
      <p class="login-hint">
        Back to <a href="/user/login">Log in</a>
      </p>
    </form>
  </div>
</section>

<script>

const BASE_URL = window.location.origin;
const passwordInput = document.getElementById('password');
const confirmPasswordInput = document.getElementById('confirm-password');
const params = new URLSearchParams(window.location.search);
const token = params.get('token');
const error = params.get('error');

if(error == "expired"){
  passwordInput.classList.add('invalid');
 showInputErrorMessage('password', 'token expired please resent the mail to reset password')

      setTimeout(()=>{
      clearAllErrors();
    },6000)
}

  function togglePwd(id, el) {
    const input = document.getElementById(id);
    const isVisible = input.type === 'text';
    input.type = isVisible ? 'password' : 'text';
    el.textContent = isVisible ? 'show' : 'hide';
  }


  document.getElementById('change-password-form').addEventListener('submit', async (e)=>{

    e.preventDefault();
       clearAllErrors();

    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;



    if(checkPasswordValid(password) && checkPasswordMatch(password,confirmPassword)){

      try{

        disableAllSubmitButtons();

        const response = await fetch(`${BASE_URL}/user/reset/user/password?token=${token}`,{
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({password})
        });

        const result = await response.json();
        if(response.ok){


          if(result.success){

            window.location.href = "/user/login";

          }else{
               passwordInput.classList.add('invalid');
              showInputErrorMessage('password', result.message || 'Invalid password')
          }

        }else{

               passwordInput.classList.add('invalid');
              showInputErrorMessage('password', result.message || 'Invalid password')


        }


      }catch(err){
        passwordInput.classList.add('invalid');
        showInputErrorMessage('password', err.message || 'Invalid password')

      }finally{
        resetAllSubmitButtons();
      }

    }else{


      if(!checkPasswordValid(password)){
        passwordInput.classList.add('invalid');
        showInputErrorMessage('password', 'Invalid password. passwprd must contain letter,number,special charector')
      }

      if(!checkPasswordMatch(password,confirmPassword)){
       passwordInput.classList.add('invalid');
        showInputErrorMessage('confirmpassword', 'password do not match')
      }

    }

      setTimeout(()=>{
      clearAllErrors();
    },6000)

  })



</script>

