<link rel="stylesheet" href="/css/login.css">


<section class="login-section">
  <div class="login-box">
    <h2>Reset Password</h2>
    <p class="login-sub">Create a new password for your account</p>
    <form id="change-password-form">


      <div class="input-group floating">
        <input type="password" name="password" id="password" placeholder=" " />
        <label for="password">New Password</label>
        <p id="password-input-error" class="error-msg-input"></p>
        <span class="toggle-password" onclick="togglePwd('password', this)">show</span>
      </div>

      <div class="input-group floating">
        <input type="password" name="confirmPassword" id="confirm-password" placeholder=" " />
        <label for="confirm-password">Confirm Password</label>
        <p id="confirmpassword-input-error" class="error-msg-input"></p>
        <span class="toggle-password" onclick="togglePwd('confirm-password', this)">show</span>
      </div>

      <button type="submit" class="login-btn primary">Change Password</button>
      <p class="login-hint">
        Back to <a href="/user/login">Log in</a>
      </p>
    </form>
  </div>
</section>

<script>



const BASE_URL          = location.origin;
const params            = new URLSearchParams(location.search);
const token             = params.get('token') || '';
const passwordInput     = document.getElementById('password');
const confirmInput      = document.getElementById('confirm-password');

function disableAllSubmitButtons () {
  document.querySelectorAll('button[type="submit"]').forEach(btn => { btn.disabled = true; });
}
function resetAllSubmitButtons   () {
  document.querySelectorAll('button[type="submit"]').forEach(btn => { btn.disabled = false; });
}
function showInputErrorMessage (field, msg) {
  const tgt = document.getElementById(field + '-input-error');
  if (tgt) tgt.textContent = msg;
}
function clearAllErrors () {
  document.querySelectorAll('.error-msg-input').forEach(el => el.textContent = '');
  document.querySelectorAll('.invalid').forEach(el => el.classList.remove('invalid'));
}


function checkPasswordValid (pwd) {
  return /^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@#$%^&*()_+=\-{}[\]|:;"'<>,.?/]).{8,}$/.test(pwd);
}
function checkPasswordMatch (p, cp) { return p === cp; }



if (params.get('error') === 'expired') {
  passwordInput.classList.add('invalid');
  showInputErrorMessage('password', 'Token expired. Please re-send reset email.');
  setTimeout(clearAllErrors, 6000);
}




function togglePwd (id, el) {
  const inp = document.getElementById(id);
  const vis = inp.type === 'text';
  inp.type  = vis ? 'password' : 'text';
  el.textContent = vis ? 'show' : 'hide';
}



document.getElementById('change-password-form').addEventListener('submit', async e => {
  e.preventDefault();
  clearAllErrors();

  const pwd  = passwordInput.value.trim();
  const cpwd = confirmInput.value.trim();

  let valid = true;
  if (!checkPasswordValid(pwd)) {
    valid = false;
    passwordInput.classList.add('invalid');
    showInputErrorMessage('password',
      'Password must be 8+ chars & include letters, numbers, specials');
  }

  if (!checkPasswordMatch(pwd, cpwd)) {
    valid = false;


    confirmInput.classList.add('invalid');
    showInputErrorMessage('confirmpassword', 'Passwords do not match');

  }
  if (!valid) {
    setTimeout(clearAllErrors, 6000);
    return;
  }

  try {
    disableAllSubmitButtons();


    const res  = await fetch(`${BASE_URL}/user/reset/user/password?token=${encodeURIComponent(token)}`, {
      method : 'POST',
      headers: { 'Content-Type': 'application/json' },
      body   : JSON.stringify({ password: pwd })
    });
    const out = await res.json();

    if (!res.ok || !out.success) {
      throw new Error(out.message || 'Password reset failed');
    }


    location.href = '/user/login';
  } catch (err) {



    passwordInput.classList.add('invalid');
    showInputErrorMessage('password', err.message);
    setTimeout(clearAllErrors, 6000);


  } finally {
    resetAllSubmitButtons(); 
  }
});
</script>


