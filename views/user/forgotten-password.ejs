<link rel="stylesheet" href="/css/login.css">



<section class="login-section">
  <div class="login-box">
    <h2>Forgot Password</h2>
    <p class="login-sub">Enter the email associated with your account</p>
    <p class="success-msg" id="success-msg"></p>
    <form id="forgotten-pasword-email-form">
      <div class="input-group floating">
        <input type="text" name="email" id="email" placeholder=" " />
        <label for="forgot-email">Email</label>
        <p id="email-input-error" class="error-msg-input"></p>
      </div>
      <button type="submit" class="login-btn primary">Send Reset Link</button>
      <p class="login-hint">
        Remember your password? <a href="/user/login">Log in</a>
      </p>
    </form>
  </div>
</section>

<script>
  const BASE_URL = window.location.origin;
  const emailInput = document.getElementById('email');
  const successMessageElm = document.getElementById('success-msg');


  const params = new URLSearchParams(window.location.search);
const error = params.get('error');

if(error == "expired"){
  emailInput.classList.add('invalid');
 showInputErrorMessage('email', 'token expired please resent the mail to reset password')

      setTimeout(()=>{
      clearAllErrors();
    },6000)
}

  document.getElementById('forgotten-pasword-email-form').addEventListener('submit', async (e)=>{
    e.preventDefault();

  successMessageElm.innerText = "";
  clearAllErrors();
  resetAllSubmitButtons();

    const email = emailInput.value.trim();

    if(checkEmailValid(email)){

    try{

      disableAllSubmitButtons();
      const response = await fetch(`${BASE_URL}/user/reset/email/password`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({email}),
      });  

      const result = await response.json();

      if(response.ok){
        successMessageElm.innerText = "Successfully sent reset link to your email. Please check your inbox"
      }else{
      emailInput.classList.add('invalid');
      showInputErrorMessage('email', result.message || 'incorrect email address')
      }

    }catch(err){
      emailInput.classList.add('invalid');
      showInputErrorMessage('email', err.message || 'incorrect email address') 

    }finally{
      resetAllSubmitButtons();
    }

  }else{
    if(!checkEmailValid(email)){
      emailInput.classList.add('invalid');
      showInputErrorMessage('email', 'invalid email address') 
    }
  }

  })

</script>

