<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= product ? product.name + ' – Product Details' : 'Product Not Found' %></title>
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
  
  <!-- Core CSS libraries -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
  
  <style>
    :root {
      --primary-color: #000;
      --primary-hover: #000;
      --secondary-color: #64748b;
      --success-color: #10b981;
      --danger-color: #ef4444;
      --warning-color: #f59e0b;
      --light-gray: #f8fafc;
      --medium-gray: #e2e8f0;
      --dark-gray: #475569;
      --border-radius: 8px;
      --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
      --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    }

    * {
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      color: #1e293b;
      background-color: #ffffff;
      line-height: 1.6;
    }

    /* Product Page Styles */
    .product-page {
      min-height: 100vh;
      background-color: var(--light-gray);
    }

    .breadcrumb-section {
      background: white;
      border-bottom: 1px solid var(--medium-gray);
      padding: 1rem 0;
    }

    .breadcrumb {
      background: none;
      padding: 0;
      margin: 0;
    }

    .breadcrumb-item + .breadcrumb-item::before {
      content: "›";
      color: var(--secondary-color);
    }

    /* Gallery Styles */
    .product-gallery {
      position: relative;
    }

    .main-image-container {
      position: relative;
      width: 100%;
      height: 500px;
      border-radius: var(--border-radius);
      overflow: hidden;
      background: white;
      box-shadow: var(--shadow);
      cursor: zoom-in;
    }

    .main-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .zoom-lens {
      position: absolute;
      border: 2px solid var(--primary-color);
      background: rgba(37, 99, 235, 0.1);
      width: 100px;
      height: 100px;
      pointer-events: none;
      display: none;
      border-radius: 50%;
    }

.zoom-result {
  position: absolute;
  top: 0;
  left: 105%;
  width: 400px;
  height: 400px;
  border: 1px solid var(--medium-gray);
  overflow: hidden;
  background: white;
  /* ▼ NEW ▼ */
  background-repeat: no-repeat;
  background-size: 200% 200%;   /* 2× zoom – adjust to taste */
  /* ▲ NEW ▲ */
  display: none;
  z-index: 1000;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-lg);
}


    .zoom-result img {
      position: absolute;
      width: 200%;
      height: 200%;
      object-fit: cover;
    }

    .thumbnail-container {
      display: flex;
      gap: 12px;
      overflow-x: auto;
      padding: 12px 0;
    }

    .thumbnail {
      flex-shrink: 0;
      width: 80px;
      height: 80px;
      border-radius: var(--border-radius);
      overflow: hidden;
      cursor: pointer;
      border: 2px solid transparent;
      transition: all 0.2s ease;
    }

    .thumbnail.active {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
    }

    .thumbnail:hover {
      border-color: var(--medium-gray);
      transform: scale(1.05);
    }

    .thumbnail img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /* Product Info Styles */
    .product-info {
      background: white;
      border-radius: var(--border-radius);
      padding: 2rem;
      box-shadow: var(--shadow);
      height: fit-content;
    }

    .product-title {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 1rem;
      color: #111827;
    }

    .product-rating {
      display: flex;
      align-items: center;
      gap: 8px;
      margin-bottom: 1rem;
    }

    .stars {
      color: #fbbf24;
    }

    .rating-text {
      color: var(--secondary-color);
      font-size: 0.875rem;
    }

    .product-price {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      color: #111827;
    }

    .original-price {
      text-decoration: line-through;
      color: var(--secondary-color);
      font-weight: 400;
      font-size: 1.25rem;
      margin-left: 8px;
    }

    .discount-badge {
      background: var(--danger-color);
      color: white;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 0.75rem;
      font-weight: 600;
      margin-left: 8px;
    }

    .product-description {
      color: var(--dark-gray);
      line-height: 1.7;
      margin-bottom: 2rem;
    }

    /* Options Styles */
    .product-option {
      margin-bottom: 1.5rem;
    }

    .option-label {
      font-weight: 600;
      margin-bottom: 8px;
      display: block;
      color: #374151;
    }

    .option-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
    }

    .size-option {
      padding: 10px 16px;
      border: 2px solid var(--medium-gray);
      border-radius: var(--border-radius);
      background: white;
      cursor: pointer;
      transition: all 0.2s ease;
      font-weight: 500;
      text-transform: uppercase;
      font-size: 0.875rem;
    }

    .size-option.active {
      border-color: var(--primary-color);
      background: var(--primary-color);
      color: white;
    }

    .size-option:hover:not(.active) {
      border-color: var(--primary-color);
      background: rgba(37, 99, 235, 0.05);
    }

    .color-option {
      width: 40px;
      height: 40px;
      border: 3px solid var(--medium-gray);
      border-radius: 50%;
      cursor: pointer;
      transition: all 0.2s ease;
      position: relative;
    }

    .color-option.active {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
    }

    .color-option:hover:not(.active) {
      transform: scale(1.1);
      box-shadow: var(--shadow);
    }

    /* Quantity & Actions */
    .quantity-section {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .quantity-label {
      font-weight: 600;
      color: #374151;
    }

    .quantity-control {
      display: flex;
      border: 2px solid var(--medium-gray);
      border-radius: var(--border-radius);
      overflow: hidden;
    }

    .quantity-btn {
      width: 40px;
      height: 40px;
      border: none;
      background: var(--light-gray);
      cursor: pointer;
      font-size: 1.125rem;
      font-weight: 600;
      transition: background-color 0.2s ease;
    }

    .quantity-btn:hover {
      background: var(--medium-gray);
    }

    .quantity-input {
      width: 60px;
      height: 40px;
      border: none;
      text-align: center;
      font-weight: 600;
      background: white;
    }

    .product-actions {
      display: flex;
      gap: 12px;
      margin-bottom: 2rem;
    }

    .btn-primary {
      background: var(--primary-color);
      border-color: var(--primary-color);
      font-weight: 600;
      padding: 12px 24px;
      border-radius: var(--border-radius);
      transition: all 0.2s ease;
    }

    .btn-primary:hover {
      background: var(--primary-hover);
      border-color: var(--primary-hover);
      transform: translateY(-1px);
      box-shadow: var(--shadow-lg);
    }

    .btn-outline-secondary {
      border: 2px solid var(--medium-gray);
      color: var(--dark-gray);
      font-weight: 600;
      padding: 10px 24px;
      border-radius: var(--border-radius);
      background: white;
      transition: all 0.2s ease;
    }

    .btn-outline-secondary:hover {
      border-color: var(--primary-color);
      color: var(--primary-color);
      transform: translateY(-1px);
      box-shadow: var(--shadow);
    }

    /* Meta Information */
    .product-meta {
      border-top: 1px solid var(--medium-gray);
      padding-top: 1.5rem;
      margin-top: 1.5rem;
    }

    .meta-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 8px;
      font-size: 0.875rem;
    }

    .meta-label {
      font-weight: 600;
      color: #374151;
    }

    .meta-value {
      color: var(--dark-gray);
    }

    .stock-in {
      color: var(--success-color);
      font-weight: 600;
    }

    .stock-out {
      color: var(--danger-color);
      font-weight: 600;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 6px;
    }

    .tag {
      background: var(--light-gray);
      color: var(--dark-gray);
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 0.75rem;
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .tag:hover {
      background: var(--primary-color);
      color: white;
    }

    /* Tabs */
    .product-tabs {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      margin-top: 3rem;
    }

    .nav-tabs {
      border-bottom: 1px solid var(--medium-gray);
      padding: 0 2rem;
    }

    .nav-tabs .nav-link {
      border: none;
      border-bottom: 3px solid transparent;
      font-weight: 600;
      color: var(--secondary-color);
      padding: 1rem 1.5rem;
      transition: all 0.2s ease;
    }

    .nav-tabs .nav-link.active {
      color: var(--primary-color);
      border-bottom-color: var(--primary-color);
      background: none;
    }

    .nav-tabs .nav-link:hover:not(.active) {
      color: var(--primary-color);
      border-bottom-color: rgba(37, 99, 235, 0.3);
    }

    .tab-content {
      padding: 2rem;
    }

    /* Specifications Table */
    .specs-table {
      width: 100%;
      border-collapse: collapse;
    }

    .specs-table tr:nth-child(even) {
      background: var(--light-gray);
    }

    .specs-table th,
    .specs-table td {
      padding: 12px 16px;
      text-align: left;
      border-bottom: 1px solid var(--medium-gray);
    }

    .specs-table th {
      font-weight: 600;
      color: #374151;
      width: 30%;
    }

    /* Reviews */
    .review-item {
      border-bottom: 1px solid var(--medium-gray);
      padding-bottom: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .review-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 8px;
    }

    .reviewer-name {
      font-weight: 600;
      color: #374151;
    }

    .review-date {
      color: var(--secondary-color);
      font-size: 0.875rem;
    }

    .review-rating {
      margin-bottom: 8px;
    }

    .review-comment {
      color: var(--dark-gray);
      line-height: 1.6;
    }

    /* Review Form */
    .review-form {
      border-top: 1px solid var(--medium-gray);
      padding-top: 2rem;
      margin-top: 2rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-label {
      font-weight: 600;
      margin-bottom: 8px;
      display: block;
      color: #374151;
    }

    .form-control {
      border: 2px solid var(--medium-gray);
      border-radius: var(--border-radius);
      padding: 12px 16px;
      transition: border-color 0.2s ease;
      font-size: 0.875rem;
    }

    .form-control:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
      outline: none;
    }

    .rating-select {
      display: flex;
      gap: 4px;
      margin-top: 8px;
    }

    .rating-star {
      font-size: 1.5rem;
      color: #d1d5db;
      cursor: pointer;
      transition: color 0.2s ease;
    }

    .rating-star:hover,
    .rating-star.active {
      color: #fbbf24;
    }

    /* Related Products */
    .related-products {
      margin-top: 4rem;
      background: white;
      border-radius: var(--border-radius);
      padding: 2rem;
      box-shadow: var(--shadow);
    }

    .related-title {
      text-align: center;
      font-weight: 700;
      margin-bottom: 2rem;
      color: #111827;
    }

    .related-card {
      background: white;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--shadow);
      transition: all 0.3s ease;
      margin-bottom: 2rem;
    }

    .related-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .related-image {
      height: 200px;
      overflow: hidden;
    }

    .related-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .related-card:hover .related-image img {
      transform: scale(1.05);
    }

    .related-content {
      padding: 1rem;
    }

    .related-name {
      font-weight: 600;
      margin-bottom: 8px;
      color: #374151;
    }

    .related-name a {
      color: inherit;
      text-decoration: none;
      transition: color 0.2s ease;
    }

    .related-name a:hover {
      color: var(--primary-color);
    }

    .related-price {
      font-weight: 700;
      color: #111827;
    }

    /* Responsive Design */
    @media (max-width: 991px) {
      .main-image-container {
        height: 400px;
      }

      .zoom-result {
        display: none !important;
      }

      .product-info {
        margin-top: 2rem;
      }
    }

    @media (max-width: 767px) {
      .main-image-container {
        height: 300px;
      }

      .product-title {
        font-size: 1.5rem;
      }

      .product-price {
        font-size: 1.5rem;
      }

      .product-actions {
        flex-direction: column;
      }

      .quantity-section {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
      }

      .nav-tabs .nav-link {
        padding: 0.75rem 1rem;
        font-size: 0.875rem;
      }

      .tab-content {
        padding: 1rem;
      }
    }

    @media (max-width: 575px) {
      .main-image-container {
        height: 250px;
      }

      .thumbnail {
        width: 60px;
        height: 60px;
      }

      .product-info {
        padding: 1.5rem;
      }
    }

    /* Utility Classes */
    .text-success {
      color: var(--success-color) !important;
    }

    .text-danger {
      color: var(--danger-color) !important;
    }

    .text-warning {
      color: var(--warning-color) !important;
    }

    .flex-fill {
      flex: 1 1 0%;
    }

    .gap-3 {
      gap: 1rem;
    }
  </style>
</head>

<body>


  <%if(product) { %>
  <main class="product-page">
    <!-- Breadcrumb -->
    <section class="breadcrumb-section">
      <div class="container">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
            <li class="breadcrumb-item"><a href="/user/products/shop" class="text-decoration-none">Shop</a></li>
            <li class="breadcrumb-item active" aria-current="page">
              <%= product ? product.name : 'Product Not Found' %>
            </li>
          </ol>
        </nav>
      </div>
    </section>

    <!-- Main Content -->
    <div class="container py-4">
      <% if (!product && error) { %>
        <div class="alert alert-danger text-center mt-5">
          <h4 class="mb-3">Error</h4>
          <p><%= error %></p>
          <a href="/user/products/shop" class="btn btn-primary mt-2">Return to Shop</a>
        </div>
      <% } else if (product) { %>

      <div class="row">
        <!-- Gallery -->
        <div class="col-lg-6">
          <div class="product-gallery">
            <div class="main-image-container" id="zoom-container">
              <img 
                id="main-image" 
                class="main-image"
                src="<%= product.images?.length ? product.images[0] : '/img/product/no-image.jpg' %>" 
                alt="<%= product.name %>" 
              />
              <div class="zoom-lens" id="zoom-lens"></div>
<div class="zoom-result" id="zoom-result"></div>

            </div>
            
            <div class="thumbnail-container">
              <% (product.images?.length ? product.images : ['/img/product/no-image.jpg']).forEach((img, idx) => { %>
                <div class="thumbnail <%= idx === 0 ? 'active' : '' %>" data-img="<%= img %>">
                  <img src="<%= img %>" alt="Thumbnail <%= idx + 1 %>">
                </div>
              <% }) %>
            </div>
          </div>
        </div>

        <!-- Product Info -->
        <div class="col-lg-6">
          <div class="product-info">
            <h1 class="product-title"><%= product.name %></h1>

            <!-- Rating -->
            <div class="product-rating">
              <div class="stars">
                <% for(let i = 1; i <= 5; i++) { %>
                  <i class="<%= i <= product.rating ? 'fas' : 'far' %> fa-star"></i>
                <% } %>
              </div>
              <span class="rating-text">
                <%= product.rating.toFixed(1) %> (<%= product.reviews?.length || 0 %> reviews)
              </span>
            </div>

            <!-- Price -->
            <div class="product-price">
              <% if(product.salePrice && product.salePrice < product.regularPrice) { %>
                ₹<%= product.salePrice.toFixed(2) %>
                <span class="original-price">₹<%= product.regularPrice.toFixed(2) %></span>
                <span class="discount-badge">
                  -<%= Math.round((1 - product.salePrice / product.regularPrice) * 100) %>%
                </span>
              <% } else { %>
                ₹<%= product.regularPrice.toFixed(2) %>
              <% } %>
            </div>

            <p class="product-description"><%= product.description %></p>

            <!-- Variants -->
            <% if(product.variants?.length) { 
                 const sizes = [...new Set(product.variants.map(v => v.size))];
                 const colors = [...new Set(product.variants.map(v => v.color))];
            %>
              <% if(sizes.length) { %>
              <div class="product-option">
                <label class="option-label">Size:</label>
                <div class="option-grid">
                  <% sizes.forEach((s, idx) => { %>
                    <div class="size-option <%= idx === 0 ? 'active' : '' %>" data-size="<%= s %>">
                      <%= s.toUpperCase() %>
                    </div>
                  <% }) %>
                </div>
              </div>
              <% } %>

              <% if(colors.length) { %>
              <div class="product-option">
                <label class="option-label">Color:</label>
                <div class="option-grid">
                  <% colors.forEach((c, idx) => { %>
                    <div 
                      class="color-option <%= idx === 0 ? 'active' : '' %>" 
                      data-color="<%= c %>" 
                      style="background-color: '<%= c %>';"
                      title="<%= c.charAt(0).toUpperCase() + c.slice(1) %>"
                    ></div>
                  <% }) %>
                </div>
              </div>
              <% } %>
            <% } %>

            <!-- Quantity -->
            <div class="quantity-section">
              <label class="quantity-label">Quantity:</label>
              <div class="quantity-control">
                <button class="quantity-btn" id="qty-minus">-</button>
                <input 
                  type="number" 
                  class="quantity-input" 
                  id="qty-input" 
                  value="1" 
                  min="1" 
                  max="<%= product.stock %>"
                />
                <button class="quantity-btn" id="qty-plus">+</button>
              </div>
            </div>

            <!-- Actions -->
            <div class="product-actions">
              <button 
                class="btn btn-primary flex-fill" 
                id="add-to-cart" 
                <%= product.stock > 0 ? '' : 'disabled' %>
              >
                <i class="fas fa-shopping-cart me-2"></i>
                <%= product.stock > 0 ? 'Add to Cart' : 'Out of Stock' %>
              </button>
              <button class="btn btn-outline-secondary flex-fill" id="add-to-wishlist">
                <i class="far fa-heart me-2"></i>
                Wishlist
              </button>
            </div>

            <!-- Meta -->
            <div class="product-meta">
              <div class="meta-item">
                <span class="meta-label">Availability:</span>
                <span class="meta-value">
                  <% if(product.stock > 0) { %>
                    <span class="stock-in">In stock (<%= product.stock %>)</span>
                  <% } else { %>
                    <span class="stock-out">Out of stock</span>
                  <% } %>
                </span>
              </div>
              <div class="meta-item">
                <span class="meta-label">SKU:</span>
                <span class="meta-value"><%= product._id %></span>
              </div>
              <div class="meta-item">
                <span class="meta-label">Category:</span>
                <span class="meta-value">
                  <% if(product.category) { %>
                    <a href="/user/products/shop?category=<%= product.category._id %>" class="text-decoration-none">
                      <%= product.category.name %>
                    </a>
                  <% } else { %>
                    Uncategorized
                  <% } %>
                </span>
              </div>
              <% if(product.brand) { %>
              <div class="meta-item">
                <span class="meta-label">Brand:</span>
                <span class="meta-value">
                  <a href="/user/products/shop?brand=<%= product.brand._id %>" class="text-decoration-none">
                    <%= product.brand.name %>
                  </a>
                </span>
              </div>
              <% } %>
              <% if(product.tags?.length) { %>
              <div class="meta-item">
                <span class="meta-label">Tags:</span>
                <div class="tags">
                  <% product.tags.forEach(t => { %>
                    <a href="/user/products/shop?tag=<%= t %>" class="tag"><%= t %></a>
                  <% }) %>
                </div>
              </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>

      <!-- Tabs -->
      <div class="product-tabs">
        <ul class="nav nav-tabs" id="product-tabs" role="tablist">
          <li class="nav-item">
            <a class="nav-link active" id="description-tab" data-bs-toggle="tab" href="#description" role="tab">
              Description
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="specifications-tab" data-bs-toggle="tab" href="#specifications" role="tab">
              Specifications
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="reviews-tab" data-bs-toggle="tab" href="#reviews" role="tab">
              Reviews (<%= product.reviews?.length || 0 %>)
            </a>
          </li>
        </ul>

        <div class="tab-content">
          <!-- Description -->
          <div class="tab-pane fade show active" id="description" role="tabpanel">
            <p><%= product.description %></p>
            <% if(product.longDescription) { %>
              <div class="mt-4"><%- product.longDescription %></div>
            <% } %>
          </div>

          <!-- Specifications -->
          <div class="tab-pane fade" id="specifications" role="tabpanel">
            <table class="specs-table">
              <tbody>
                <tr>
                  <th>Material</th>
                  <td><%= product.material || 'Not specified' %></td>
                </tr>
                <tr>
                  <th>Dimensions</th>
                  <td><%= product.dimensions || 'Not specified' %></td>
                </tr>
                <tr>
                  <th>Weight</th>
                  <td><%= product.weight ? product.weight + ' kg' : 'Not specified' %></td>
                </tr>
                <% if(product.variants?.length) { %>
                <tr>
                  <th>Available Colors</th>
                  <td><%= [...new Set(product.variants.map(v => v.color))].join(', ') %></td>
                </tr>
                <tr>
                  <th>Available Sizes</th>
                  <td><%= [...new Set(product.variants.map(v => v.size.toUpperCase()))].join(', ') %></td>
                </tr>
                <% } %>
                <% if(product.specifications) { 
                     Object.entries(product.specifications).forEach(([k, v]) => { %>
                <tr>
                  <th><%= k.charAt(0).toUpperCase() + k.slice(1) %></th>
                  <td><%= v %></td>
                </tr>
                <% }) } %>
              </tbody>
            </table>
          </div>

          <!-- Reviews -->
          <div class="tab-pane fade" id="reviews" role="tabpanel">
            <% if(product.reviews?.length) { %>
              <% product.reviews.forEach(r => { %>
                <div class="review-item">
                  <div class="review-header">
                    <span class="reviewer-name"><%= r.name %></span>
                    <span class="review-date"><%= new Date(r.date).toLocaleDateString() %></span>
                  </div>
                  <div class="review-rating">
                    <% for(let i = 1; i <= 5; i++) { %>
                      <i class="<%= i <= r.rating ? 'fas' : 'far' %> fa-star text-warning"></i>
                    <% } %>
                  </div>
                  <p class="review-comment"><%= r.comment %></p>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-center text-muted">No reviews yet. Be the first to review this product!</p>
            <% } %>

            <!-- Review Form -->
            <div class="review-form">
              <h4 class="mb-3">Write a Review</h4>
              <form id="review-form">
                <input type="hidden" name="productId" value="<%= product._id %>"/>
                
                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group">
                      <label class="form-label" for="review-name">Name *</label>
                      <input type="text" id="review-name" class="form-control" name="name" required/>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="form-group">
                      <label class="form-label" for="review-email">Email *</label>
                      <input type="email" id="review-email" class="form-control" name="email" required/>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label class="form-label">Rating *</label>
                  <div class="rating-select" id="rating-select">
                    <% for(let i = 1; i <= 5; i++) { %>
                      <i class="far fa-star rating-star" data-rating="<%= i %>"></i>
                    <% } %>
                  </div>
                  <input type="hidden" id="rating-value" name="rating" value="0"/>
                </div>

                <div class="form-group">
                  <label class="form-label" for="review-comment">Review *</label>
                  <textarea 
                    id="review-comment" 
                    class="form-control" 
                    rows="4" 
                    name="comment" 
                    placeholder="Share your experience with this product..."
                    required
                  ></textarea>
                </div>

                <button type="submit" class="btn btn-primary">Submit Review</button>
              </form>
            </div>
          </div>
        </div>
      </div>

      <!-- Related Products -->
      <% if(relatedProducts?.length) { %>
      <div class="related-products">
        <h3 class="related-title">Related Products</h3>
        <div class="row">
          <% relatedProducts.forEach(rp => { %>
            <div class="col-lg-3 col-md-4 col-sm-6">
              <div class="related-card">
                <div class="related-image">
                  <a href="/user/products/<%= rp._id %>">
                    <img 
                      src="<%= rp.images?.length ? rp.images[0] : '/img/product/no-image.jpg' %>" 
                      alt="<%= rp.name %>"
                    />
                  </a>
                </div>
                <div class="related-content">
                  <h5 class="related-name">
                    <a href="/user/products/<%= rp._id %>"><%= rp.name %></a>
                  </h5>
                  <div class="mb-2">
                    <% for(let i = 1; i <= 5; i++) { %>
                      <i class="<%= i <= rp.rating ? 'fas' : 'far' %> fa-star text-warning"></i>
                    <% } %>
                  </div>
                  <div class="related-price">
                    <% if(rp.salePrice && rp.salePrice < rp.regularPrice) { %>
                      ₹<%= rp.salePrice.toFixed(2) %>
                      <span class="original-price">₹<%= rp.regularPrice.toFixed(2) %></span>
                    <% } else { %>
                      ₹<%= rp.regularPrice.toFixed(2) %>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
      <% } %>

      <% } %>
    </div>
  </main>
  <% }else{ %>
    <div style="text-align: center;">
      <p style="color: red;text-align: center;width: 100%;"><%= error%></p>
           <a href="/user/products/shop" class="btn btn-primary mt-2">Return to Shop</a>
    </div>
    <% } %>

  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  
  <% if(product) {%>
  <script>

    const BASE_URL = window.location.origin;
    document.addEventListener('DOMContentLoaded', function() {
      // Gallery & Zoom functionality
  const mainImg       = document.getElementById('main-image');
  const zoomLens      = document.getElementById('zoom-lens');
  const zoomResult    = document.getElementById('zoom-result');
  const zoomContainer = document.getElementById('zoom-container');

  /* ---------- Amazon-style magnifier ---------- */
  let lensSize = 120;       // diameter of the circular lens
  let cx = 0, cy = 0;       // scale factors – set once the large image is loaded
function prepareZoom(src) {
  zoomResult.style.backgroundImage = `url('${src}')`;

  const img = new Image();
  img.src = src;
  img.onload = () => {
    /* ---------------------------------------------------
       Choose the greatest of:
       – natural image scale,
       – a guaranteed 2× fallback.
    --------------------------------------------------- */
    const naturalCx = img.naturalWidth  / mainImg.clientWidth;
    const naturalCy = img.naturalHeight / mainImg.clientHeight;
    const zoomFactor = Math.max(2, naturalCx, naturalCy);   // ‼️ new line

    cx = cy = zoomFactor;                                   // use a square factor
    zoomResult.style.backgroundSize =
      `${mainImg.clientWidth  * zoomFactor}px
       ${mainImg.clientHeight * zoomFactor}px`;
  };
}


  // initial setup
  prepareZoom(mainImg.src);

  if (window.innerWidth > 991) {       // desktop only
    zoomContainer.addEventListener('mouseenter', () => {
      zoomLens.style.display   = 'block';
      zoomResult.style.display = 'block';
    });

    zoomContainer.addEventListener('mouseleave', () => {
      zoomLens.style.display   = 'none';
      zoomResult.style.display = 'none';
    });

    zoomContainer.addEventListener('mousemove', (e) => {
      const rect = mainImg.getBoundingClientRect();

      // cursor position inside the image
      let x = e.clientX - rect.left;
      let y = e.clientY - rect.top;

      // keep the lens fully inside the image
      x = Math.max(lensSize / 2, Math.min(rect.width  - lensSize / 2, x));
      y = Math.max(lensSize / 2, Math.min(rect.height - lensSize / 2, y));

      // move the lens
      zoomLens.style.cssText = `
        width:${lensSize}px;height:${lensSize}px;
        left:${x - lensSize / 2}px;top:${y - lensSize / 2}px;`;

      // move the background of the zoom panel
      zoomResult.style.backgroundPosition =
        `-${x * cx - zoomResult.clientWidth  / 2}px -${y * cy - zoomResult.clientHeight / 2}px`;
    });
  }

  // // refresh zoom when a thumbnail is chosen
  // document.querySelectorAll('.thumbnail').forEach(th => {
  //   th.addEventListener('click', function () {
  //     const src = this.dataset.img;
  //     mainImg.src = src;
  //     prepareZoom(src);
  //   });
  // });
  /* ------------------------------------------- */


      // Thumbnail functionality
// 🔄  REPLACE your old handler with this one
document.querySelectorAll('.thumbnail').forEach(thumb => {
  thumb.addEventListener('click', function () {
    const imgSrc = this.dataset.img;

    // toggle active border
    document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
    this.classList.add('active');

    // swap the main image …
    mainImg.src = imgSrc;

    // … and tell the zoom panel to use the same hi-res file
    prepareZoom(imgSrc);          // <- NEW
  });
});


      // Quantity controls
      const qtyMinus = document.getElementById('qty-minus');
      const qtyPlus = document.getElementById('qty-plus');
      const qtyInput = document.getElementById('qty-input');

      if (qtyMinus && qtyPlus && qtyInput) {
        qtyMinus.addEventListener('click', function() {
          let value = parseInt(qtyInput.value);
          if (value > 1) {
            qtyInput.value = value - 1;
          }
        });

        qtyPlus.addEventListener('click', function() {
          let value = parseInt(qtyInput.value);
          let max = parseInt(qtyInput.max);
          if (value < max) {
            qtyInput.value = value + 1;
          }
        });
      }

      // Size selection
      document.querySelectorAll('.size-option').forEach(size => {
        size.addEventListener('click', function() {
          document.querySelectorAll('.size-option').forEach(s => s.classList.remove('active'));
          this.classList.add('active');
        });
      });

      // Color selection
      document.querySelectorAll('.color-option').forEach(color => {
        color.addEventListener('click', function() {
          document.querySelectorAll('.color-option').forEach(c => c.classList.remove('active'));
          this.classList.add('active');
        });
      });

      // Rating selection
      const ratingStars = document.querySelectorAll('.rating-star');
      const ratingValue = document.getElementById('rating-value');

      ratingStars.forEach((star, index) => {
        star.addEventListener('mouseenter', function() {
          highlightStars(index + 1);
        });

        star.addEventListener('click', function() {
          const rating = index + 1;
          ratingValue.value = rating;
          highlightStars(rating);
        });
      });

      document.getElementById('rating-select').addEventListener('mouseleave', function() {
        highlightStars(parseInt(ratingValue.value));
      });

      function highlightStars(rating) {
        ratingStars.forEach((star, index) => {
          if (index < rating) {
            star.classList.remove('far');
            star.classList.add('fas');
          } else {
            star.classList.remove('fas');
            star.classList.add('far');
          }
        });
      }

      // Review form submission
      const reviewForm = document.getElementById('review-form');
      if (reviewForm) {
        reviewForm.addEventListener('submit', function(e) {
          e.preventDefault();
          
          const formData = new FormData(this);
          const data = {
            productId: formData.get('productId'),
            name: formData.get('name').trim(),
            email: formData.get('email').trim(),
            rating: parseInt(formData.get('rating')),
            comment: formData.get('comment').trim()
          };

          if (!data.rating) {
            alert('Please select a rating.');
            return;
          }

          // Submit review (replace with your actual API endpoint)
          fetch('/api/reviews/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          })
          .then(response => response.json())
          .then(result => {
            if (result.success) {
              alert('Review submitted successfully!');
              location.reload();
            } else {
              alert(result.message || 'Failed to submit review.');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error submitting review.');
          });
        });
      }

      // Add to cart functionality
      const addToCartBtn = document.getElementById('add-to-cart');
      if (addToCartBtn) {
        addToCartBtn.addEventListener('click', async function() {
          const selectedSize = document.querySelector('.size-option.active')?.dataset.size;
          const selectedColor = document.querySelector('.color-option.active')?.dataset.color;
          const quantity = parseInt(qtyInput?.value || 1);
          const productId =  '<%= product._id %>';

          const variant = { size: selectedSize, color: selectedColor }

    try{

        const response = await fetch(`${BASE_URL}/user/cart/api/add/${productId}`,{
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ variant, quantity })
        });

        const result = await response.json();

        if(response.ok){
          showGlobalToast('item added to cart successfully')
            updateCartCount(result.userId)
        }else{
            alert(result.message)
        }
    }catch(err){
       window.location.href = '/user/login'
    }

        });
      }


        async function updateCartCount(userId) {
    const BASE_URL = window.location.origin;
  try {
    const res = await fetch(`${BASE_URL}/user/cart/api/count`);
    const result = await res.json();
    if(res.ok){
        const el = document.getElementById('HeadercartCount');
        el.innerText = result.count;
    }else{
        alert(result.message)
    }
    if (el) el.innerText = count;
  } catch (err) {
    console.error('Error fetching cart count:', err);
  }
}

      // Add to wishlist functionality
      const addToWishlistBtn = document.getElementById('add-to-wishlist');
      if (addToWishlistBtn) {
        addToWishlistBtn.addEventListener('click', function() {
          const icon = this.querySelector('i');
          const isWishlisted = icon.classList.contains('fas');

          if (isWishlisted) {
            icon.classList.remove('fas');
            icon.classList.add('far');
            alert('Removed from wishlist!');
          } else {
            icon.classList.remove('far');
            icon.classList.add('fas');
            alert('Added to wishlist!');
          }
        });
      }
    });
  </script>

  <%}%>
</body>
</html>
