<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit profile â€“ <%= user.name %></title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    />

    <style>
      :root {
        --bg: #f7f9fc;
        --white: #fff;
        --primary: #000;
        --primary-light: #e8f0ff;
        --text: #374151;
        --muted: #6b7280;
        --radius: 12px;
        --tr: 0.25s;
      }
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Segoe UI", sans-serif;
      }
      body {
        background: var(--bg);
        color: var(--text);
        line-height: 1.5;
      }

      /* ===== layout ===== */
      .wrapper {
        display: flex;
        min-height: 100dvh;
        max-width: 1300px;
        margin: auto;
      }

      /* ===== sidebar ===== */
      .sidebar {
        width: 250px;
        background: var(--white);
        border-right: 1px solid #e5e7eb;
        display: flex;
        flex-direction: column;
        padding: 1.5rem 0;
        transition: transform var(--tr);
      }
      .avatar-box {
        display: flex;
        align-items: center;
        gap: 0.9rem;
        padding-inline: 1.5rem;
        margin-bottom: 1.75rem;
      }
      .avatar {
        padding-inline: 10px;
        padding-block: 6px;
        border-radius: 50%;
        background: var(--primary-light);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.3rem;
        color: var(--primary);
        font-weight: 600;
      }
      .avatar-box p {
        font-size: 0.8rem;
        color: var(--muted);
      }
      nav ul {
        list-style: none;
      }
      nav li a {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        padding: 0.9rem 1.5rem;
        text-decoration: none;
        color: inherit;
        border-left: 3px solid transparent;
        transition: background var(--tr), transform var(--tr);
      }
      nav li a:hover {
        background: #f1f5f9;
        transform: translateX(3px);
      }
      nav li a.active {
        border-color: var(--primary);
        background: var(--primary-light);
      }
      nav li i {
        width: 18px;
        text-align: center;
      }
      .logout {
        margin-top: auto;
        padding: 0.9rem 1.5rem;
        background: none;
        border: none;
        color: #ef4444;
        display: flex;
        gap: 0.6rem;
        cursor: pointer;
        transition: background var(--tr);
      }
      .logout:hover {
        background: #fee2e2;
      }

      /* ===== mobile header ===== */
      .mobile-top {
        display: none;
        align-items: center;
        justify-content: space-between;
        background: var(--white);
        border-bottom: 1px solid #e5e7eb;
        padding: 1rem 1.25rem;
        position: sticky;
        top: 0;
      }
      .mobile-btn {
        background: none;
        border: none;
        font-size: 1.3rem;
      }
      .overlay {
        display: none;
        position: fixed;
        inset: 0;
        background: #0005;
        z-index: 800;
      }

      /* ===== main ===== */
      main {
        flex: 1;
        padding: 2rem 2.5rem;
        overflow-x: hidden;
      }
      h1 {
        font-size: 1.4rem;
        margin-bottom: 1.6rem;
      }
      .crumb {
        font-size: 0.85rem;
        color: var(--muted);
        margin-bottom: 1.2rem;
      }
      .crumb i {
        margin-inline: 0.25rem;
      }

      /* ===== form ===== */
      form {
        display: grid;
        gap: 1rem;
        grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
      }
      .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.35rem;
      }
      label {
        font-size: 0.78rem;
        font-weight: 600;
        color: var(--muted);
      }
      .input-box {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: var(--white);
        border: 1px solid #d1d5db;
        border-radius: var(--radius);
        padding: 0.7rem 1rem;
        transition: border-color var(--tr), box-shadow var(--tr);
      }
      .input-box:focus-within {
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.15);
      }
      .input-box i {
        color: var(--muted);
      }
      .input-box input {
        border: none;
        background: none;
        outline: none;
        font-size: 0.95rem;
        color: var(--text);
        flex: 1;
      }

      .save-btn {
        justify-self: start;
        padding: 0.8rem 1.3rem;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        gap: 0.6rem;
        background: var(--primary);
        color: var(--white);
        border: none;
        border-radius: var(--radius);
        cursor: pointer;
        transition: background var(--tr), transform var(--tr);
        margin-top: auto;
        margin-bottom: auto;
      }
      .save-btn[disabled] {
        opacity: 0.6;
        cursor: not-allowed;
      }
      .save-btn:hover:not([disabled]) {
        background: #0b5be0;
        transform: translateY(-2px);
      }

      /* ===== notifications ===== */
      .note {
        grid-column: 1/-1;
        padding: 0.8rem 1.1rem;
        border-left: 4px solid;
        border-radius: var(--radius);
        font-size: 0.9rem;
      }
      .note.error {
        background: #fef2f2;
        border-color: #ef4444;
        color: #991b1b;
      }
      .note.success {
        background: #f0fdf4;
        border-color: #22c55e;
        color: #166534;
      }

      /* ===== modal ===== */
      .modal {
        display: none;
        position: fixed;
        inset: 0;
        align-items: center;
        justify-content: center;
        background: #0004;
        z-index: 1000;
      }
      .modal-content {
        background: var(--white);
        padding: 2rem;
        border-radius: var(--radius);
        width: 90%;
        max-width: 380px;
        text-align: center;
        position: relative;
      }
      .modal-content h3 {
        margin-bottom: 1rem;
        font-size: 1.2rem;
      }
      .otp-input {
        width: 100%;
        padding: 0.7rem 1rem;
        margin-bottom: 1.1rem;
        border: 1px solid #d1d5db;
        border-radius: var(--radius);
      }
      .modal-btn {
        padding: 0.55rem 1.4rem;
        font-size: 0.9rem;
        background: var(--primary);
        color: var(--white);
        border: none;
        border-radius: var(--radius);
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
      }
      .modal-btn[disabled] {
        opacity: 0.6;
        cursor: not-allowed;
      }
      .close-x {
        position: absolute;
        top: 0.8rem;
        right: 0.9rem;
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        color: var(--muted);
      }
      .modal-note {
        font-size: 0.85rem;
        margin-bottom: 0.8rem;
      }
      .modal-note.error {
        color: #dc2626;
      }
      .modal-note.success {
        color: #15803d;
      }

      /* ===== responsiveness ===== */
      @media (max-width: 768px) {
        .sidebar {
          position: fixed;
          inset-block: 0;
          left: 0;
          z-index: 850;
          transform: translateX(-100%);
        }
        .sidebar.open {
          transform: none;
        }
        .mobile-top {
          display: flex;
        }
        .wrapper {
          flex-direction: column;
        }
        main {
          padding: 1.25rem;
          margin-top: 64px;
        }
        .overlay.show {
          display: block;
        }
      }
    </style>
  </head>
  <body>
    <!-- ===== mobile header ===== -->
    <div class="mobile-top">
      <button class="mobile-btn" onclick="toggleMenu()">
        <i class="fas fa-bars"></i>
      </button>
      <span>Edit profile</span>
      <span></span>
    </div>
    <div class="overlay" onclick="toggleMenu()"></div>

    <div class="wrapper">
      <!-- ===== sidebar ===== -->
      <aside class="sidebar" id="side">
        <div class="avatar-box">
          <div class="avatar"><%= user.name?.[0].toUpperCase() ?? 'U' %></div>
          <div>
            <h4 style="font-size: 1rem"><%= user.name %></h4>
            <p><%= user.email %></p>
          </div>
        </div>

        <nav>
          <ul>
            <li>
              <a href="/user/profile/"
                ><i class="fas fa-user"></i>Personal data</a
              >
            </li>
            <li>
              <a class="active" href="/user/profile/edit"
                ><i class="fas fa-user-edit"></i>Edit profile</a
              >
            </li>
            <li>
              <a href="/user/profile/address"
                ><i class="fas fa-map-marker-alt"></i>Addresses</a
              >
            </li>
            <li>
              <a href="/user/profile/password"
                ><i class="fas fa-key"></i>Change password</a
              >
            </li>
          </ul>
        </nav>

        <button class="logout" onclick="location.href='/logout'">
          <i class="fas fa-right-from-bracket"></i>Log out
        </button>
      </aside>

      <!-- ===== main ===== -->
      <main>
        <div class="crumb">
          <i class="fas fa-house"></i> Home
          <i class="fas fa-angle-right"></i> Account
          <i class="fas fa-angle-right"></i> Edit profile
        </div>
        <h1>Edit profile</h1>

        <!-- feedback placeholder -->
        <div id="formMessage"></div>

        <form id="editForm">
          <div class="form-group">
            <label for="name">Full name</label>
            <div class="input-box">
              <i class="fas fa-user"></i>
              <input
                id="name"
                name="name"
                type="text"
                required
                value="<%= user.name %>"
              />
            </div>
          </div>

          <div class="form-group">
            <label for="email">E-mail address</label>
            <div class="input-box">
              <i class="fas fa-envelope"></i>
              <input
                id="email"
                name="email"
                type="email"
                required
                value="<%= user.email %>"
              />
            </div>
          </div>

          <div class="form-group">
            <label for="phone">Phone number</label>
            <div class="input-box">
              <i class="fas fa-phone"></i>
              <input
                id="phone"
                name="phone"
                type="tel"
                value="<%= user.phone ?? '' %>"
              />
            </div>
          </div>

          <div class="form-group">
            <label for="dob">Date of birth</label>
            <div class="input-box">
              <i class="fas fa-calendar"></i>
              <input
                id="dob"
                name="dateOfBirth"
                type="date"
                value="<%= user.dateOfBirth ? user.dateOfBirth.toISOString().slice(0,10) : '' %>"
              />
            </div>
          </div>

          <button id="saveBtn" class="save-btn" type="submit">
            <i class="fas fa-save"></i> Save
          </button>
        </form>
      </main>
    </div>

    <!-- ===== OTP modal ===== -->
    <div class="modal" id="otpModal">
      <div class="modal-content">
        <button class="close-x" onclick="closeModal()">
          <i class="fas fa-times"></i>
        </button>
        <h3>Email verification</h3>
        <p class="modal-note" id="otpMsg">
          We sent a 6-digit code to your new email.
        </p>
        <input type="hidden" id="emailOtpInput" />
        <input type="hidden" id="oldEmailOtpInput" />
        <input class="otp-input" id="otpInput" placeholder="Enter OTP" />
        <button id="otpBtn" class="modal-btn" onclick="verifyOTP()">
          <i class="fas fa-check"></i> Verify
        </button>
      </div>
    </div>

    <script>
      /* ===== helpers ===== */
      function toggleMenu() {
        document.getElementById("side").classList.toggle("open");
        document.querySelector(".overlay").classList.toggle("show");
      }
      function showMessage(text, type = "error", target = "#formMessage") {
        const el = document.querySelector(target);
        el.innerHTML = `<div class="note ${
          type === "success" ? "success" : "error"
        }">${text}</div>`;
      }
      function setLoading(btnId, label) {
        const btn = document.getElementById(btnId);
        btn.disabled = true;
        btn.dataset.original = btn.innerHTML;
        btn.innerHTML = `<i class="fas fa-spinner fa-spin"></i> ${label}`;
      }
      function clearLoading(btnId) {
        const btn = document.getElementById(btnId);
        btn.disabled = false;
        btn.innerHTML = btn.dataset.original;
      }

      /* ===== form submission ===== */
      const form = document.getElementById("editForm");
      const originalEmail = "<%= user.email %>";
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        setLoading("saveBtn", "Saving");

        const data = Object.fromEntries(new FormData(form).entries());


        try {
          const res = await fetch("/user/profile/api/edit", {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });
          const out = await res.json();
          if (!res.ok) throw new Error(out.message);
          if (out.verifyEmail) {
            document.getElementById("emailOtpInput").value = out.email;
            document.getElementById("oldEmailOtpInput").value = out.oldEmail;
            openModal();
          } else {
            showMessage("Profile updated successfully", "success");
            setTimeout(() => (location.href = "/user/profile/"), 1200);
          }
        } catch (err) {
          showMessage(err.message || "Update failed");
        } finally {
          clearLoading("saveBtn");
        }
      });

      /* ===== modal ===== */
      function openModal() {
        document.getElementById("otpModal").style.display = "flex";
      }
      function closeModal() {
        document.getElementById("otpModal").style.display = "none";
        document.getElementById("otpInput").value = "";
        document.getElementById("otpMsg").className = "modal-note";
      }

      async function verifyOTP() {
        const otp = document.getElementById("otpInput").value.trim();
        if (!otp) {
          document.getElementById("otpMsg").textContent = "Enter OTP";
          document.getElementById("otpMsg").className = "modal-note error";
          return;
        }
        setLoading("otpBtn", "Verifying");
        const email = document.getElementById("emailOtpInput").value;
        const oldEmail = document.getElementById("oldEmailOtpInput").value;
        try {
          const res = await fetch("/user/profile/api/verify/email/otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, otp, oldEmail }),
          });
          const out = await res.json();
          if (!res.ok) throw new Error(out.message);
          document.getElementById("otpMsg").textContent =
            "Verified! redirectingâ€¦";
          document.getElementById("otpMsg").className = "modal-note success";
          setTimeout(() => (location.href = "/user/profile/"), 1200);
        } catch (err) {
          document.getElementById("otpMsg").textContent =
            err.message || "Verification failed";
          document.getElementById("otpMsg").className = "modal-note error";
        } finally {
          clearLoading("otpBtn");
        }
      }
    </script>
  </body>
</html>
