<link rel="stylesheet" href="/css/login.css" />

<!-- ===== Header Top (same as login) ===== -->
<div class="header__top">
  <div class="container">
    <div class="row">
      <div class="col-lg-6 col-md-7">
        <div class="header__top__left">
          <p>Free shipping, 30-day return or refund guarantee.</p>
        </div>
      </div>
      <div class="col-lg-6 col-md-5">
        <div class="header__top__right">
          <div class="header__top__links">
            <a href="/user/login">Sign in</a>
            <a href="#">FAQs</a>
          </div>
          <div class="header__top__hover">
            <span>Usd <i class="arrow_carrot-down"></i></span>
            <ul>
              <li>USD</li>
              <li>EUR</li>
              <li>USD</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- ===== Signup Page Component ===== -->
<section class="login-wrapper">
  <!-- Left Image Section -->
  <div class="login-image">
    <!-- Replace with a signup‑specific banner if desired -->
    <img src="/img/signup_banner.jpg" alt="Signup Banner" />
  </div>

  <!-- Right Form Section -->
  <div class="login-section">
    <div class="login-box">
      <h2>Create Your Account</h2>
      <p class="login-sub">It’s quick and easy.</p>
      <p class="error-msg" id="error-msg"></p>

      <form id="signup-form">
        <!-- Name -->
        <div class="input-group floating">
          <input type="text" name="name" id="name" placeholder=" "  />
          <label for="name">Full Name</label>
          <p id="fullname-input-error" class="error-msg-input"></p>
        </div>

        <!-- Email -->
        <div class="input-group floating">
          <input
            type="text"
            name="email"
            id="signup-email"
            placeholder=" "
          />
          <label for="signup-email">Email</label>
           <p id="email-input-error" class="error-msg-input"></p>
        </div>

        <!-- Phone -->
        <div class="input-group floating">
          <input
            type="text"
            min="10"
            max="10"
            name="phone"
            id="signup-phone"
            placeholder=" "
            
          />
          <label for="signup-phone">Phone Number</label>
          <p id="phone-input-error" class="error-msg-input"></p>
        </div>

        <!-- Password -->
        <div class="input-group floating">
          <input
            type="password"
            name="password"
            id="signup-password"
            placeholder=" "
            
          />
          <label for="signup-password">Password</label>
          <p id="password-input-error" class="error-msg-input"></p>
          <span
            class="toggle-password"
            onclick="togglePwd('signup-password', this)"
            >show</span
          >
        </div>

        <!-- Confirm Password -->
        <div class="input-group floating">
          <input
            type="password"
            name="confirmPassword"
            id="confirm-password"
            placeholder=" "
            
          />
          <label for="confirm-password">Confirm Password</label>
          <p id="confirmpassword-input-error" class="error-msg-input"></p>
          <span
            class="toggle-password"
            onclick="togglePwd('confirm-password', this)"
            >show</span
          >
        </div>

        <!-- Buttons -->
        <button type="submit" class="login-btn primary">Sign Up</button>
        <div class="or-divider"><span>OR</span></div>
        <button type="button" onclick="googleAuth()" class="login-btn google">
          <img src="/img/google.png" alt="Google" /> Sign up with Google
        </button>

        <p class="login-hint">
          Already have an account? <a href="/user/login">Log in</a>
        </p>
      </form>
    </div>
  </div>
</section>

<script>
    const BASE_URL = window.location.origin;

  function togglePwd(id, el) {
    const input = document.getElementById(id);
    const isVisible = input.type === "text";
    input.type = isVisible ? "password" : "text";
    el.textContent = isVisible ? "show" : "hide";
  }


  function googleAuth() {
      disableAllSubmitButtons();
      window.location.href = '/user/auth/google';
  }


document.getElementById('signup-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  const errorMessageInput = document.getElementById("error-msg");

  // Clear previous error messages
  clearAllErrors();
  resetAllSubmitButtons();
  errorMessageInput.innerText = "";

  const fullnameInput = document.getElementById('name');
  const emailInput = document.getElementById('signup-email');
  const phoneInput = document.getElementById('signup-phone');
  const passwordInput = document.getElementById('signup-password');
  const confirmpasswordInput = document.getElementById('confirm-password');

  const fullname = fullnameInput.value;
  const email = emailInput.value;
  const phone = phoneInput.value;
  const password = passwordInput.value;
  const confirmpassword = confirmpasswordInput.value;



  if (
    checkEmailValid(email) &&
    checkPhoneNumberValid(phone) &&
    checkUsernameValid(fullname) &&
    checkPasswordValid(password) &&
    checkNameValid(fullname) &&
    checkPasswordMatch(password, confirmpassword)
  ) {
    const formData = {
      name: fullname,
      email: email,
      phone: phone,
      password: password,
    };

    try {
      disableAllSubmitButtons();
      const response = await fetch(`${BASE_URL}/user/register`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });      

      if (response.ok) {
        const result = await response.json();
        window.location.href = `/user/verify/email/${result.userId}/otp`;
      } else {
        const result = await response.json();
        errorMessageInput.innerText = result.message || "Registration failed.";
      }

    } catch (err) {
      errorMessageInput.innerText = err.message || "Network error.";
    } finally{
 
      resetAllSubmitButtons();
      setTimeout(() => {
        errorMessageInput.innerText = "";
      }, 6000);
    }
      
  } else {
    if (!checkNameValid(fullname)) {
      fullnameInput.classList.add('invalid');
      showInputErrorMessage('fullname',"Please re-enter your name properly.\n");
    }
    if (!checkPhoneNumberValid(phone)) {
      phoneInput.classList.add('invalid');
      showInputErrorMessage('phone', "Please enter a valid phone number.\n");
    }
    if (!checkEmailValid(email)) {
      emailInput.classList.add('invalid');
      showInputErrorMessage('email',"Please enter a valid email address.\n");
    }
    if (!checkPasswordValid(password)) {
      passwordInput.classList.add('invalid');
      confirmpasswordInput.classList.add('invalid');
      showInputErrorMessage('password', "Password must be strong (must contain letters (a-Z), numbers (0-9), special characters like /,+,$,@,%).\n")
    }
    if (!checkPasswordMatch(password, confirmpassword)) {
      confirmpasswordInput.classList.add('invalid')
      showInputErrorMessage('confirmpassword',"Passwords must match.\n");
    }

    setTimeout(() => {
      clearAllErrors();
    }, 6000);
    resetAllSubmitButtons();
  }
});


    
</script>
