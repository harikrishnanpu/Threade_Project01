<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Wishlist - User Dashboard</title>
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
  
  <!-- Core CSS libraries -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
  
  <style>
    :root {
      --primary-color: #2563eb;
      --primary-hover: #1d4ed8;
      --secondary-color: #64748b;
      --success-color: #10b981;
      --danger-color: #ef4444;
      --warning-color: #f59e0b;
      --light-gray: #f8fafc;
      --medium-gray: #e2e8f0;
      --dark-gray: #475569;
      --border-radius: 8px;
      --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
      --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
      --sidebar-width: 280px;
    }

    * {
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      color: #1e293b;
      background-color: var(--light-gray);
      line-height: 1.6;
      margin: 0;
    }

    /* Sidebar Styles */
    .sidebar {
      position: fixed;
      top: 0;
      left: 0;
      height: 100vh;
      width: var(--sidebar-width);
      background: white;
      border-right: 1px solid var(--medium-gray);
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      z-index: 1000;
      overflow-y: auto;
    }

    .sidebar.active {
      transform: translateX(0);
    }

    .sidebar-header {
      padding: 1.5rem;
      border-bottom: 1px solid var(--medium-gray);
    }

    .sidebar-brand {
      font-size: 1.25rem;
      font-weight: 700;
      color: var(--primary-color);
      text-decoration: none;
    }

    .sidebar-nav {
      padding: 1rem 0;
    }

    .nav-item {
      margin-bottom: 0.25rem;
    }

    .nav-link {
      display: flex;
      align-items: center;
      padding: 0.75rem 1.5rem;
      color: var(--dark-gray);
      text-decoration: none;
      transition: all 0.2s ease;
      border-left: 3px solid transparent;
    }

    .nav-link:hover {
      background: var(--light-gray);
      color: var(--primary-color);
      border-left-color: var(--primary-color);
    }

    .nav-link.active {
      background: rgba(37, 99, 235, 0.1);
      color: var(--primary-color);
      border-left-color: var(--primary-color);
      font-weight: 600;
    }

    .nav-link i {
      width: 20px;
      margin-right: 0.75rem;
      font-size: 1rem;
    }

    /* Main Content */
    .main-content {
      margin-left: 0;
      min-height: 100vh;
      transition: margin-left 0.3s ease;
    }

    .main-content.sidebar-open {
      margin-left: var(--sidebar-width);
    }

    /* Header */
    .header {
      background: white;
      border-bottom: 1px solid var(--medium-gray);
      padding: 1rem 1.5rem;
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .header-content {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .sidebar-toggle {
      background: none;
      border: none;
      font-size: 1.25rem;
      color: var(--dark-gray);
      cursor: pointer;
      padding: 0.5rem;
      border-radius: var(--border-radius);
      transition: background-color 0.2s ease;
    }

    .sidebar-toggle:hover {
      background: var(--light-gray);
    }

    .page-title {
      font-size: 1.5rem;
      font-weight: 700;
      margin: 0;
      color: #111827;
    }

    /* Content Area */
    .content {
      padding: 2rem 1.5rem;
    }

    /* Wishlist Styles */
    .wishlist-header {
      background: white;
      border-radius: var(--border-radius);
      padding: 2rem;
      margin-bottom: 2rem;
      box-shadow: var(--shadow);
    }

    .wishlist-stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1.5rem;
      margin-top: 1.5rem;
    }

    .stat-card {
      background: var(--light-gray);
      padding: 1.5rem;
      border-radius: var(--border-radius);
      text-align: center;
    }

    .stat-number {
      font-size: 2rem;
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 0.5rem;
    }

    .stat-label {
      color: var(--secondary-color);
      font-size: 0.875rem;
      font-weight: 500;
    }

    /* Wishlist Grid */
    .wishlist-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }

    .wishlist-item {
      background: white;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--shadow);
      transition: all 0.3s ease;
    }

    .wishlist-item:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .item-image {
      position: relative;
      height: 200px;
      overflow: hidden;
    }

    .item-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .wishlist-item:hover .item-image img {
      transform: scale(1.05);
    }

    .remove-btn {
      position: absolute;
      top: 0.75rem;
      right: 0.75rem;
      width: 36px;
      height: 36px;
      background: rgba(255, 255, 255, 0.9);
      border: none;
      border-radius: 50%;
      color: var(--danger-color);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s ease;
      opacity: 0;
    }

    .wishlist-item:hover .remove-btn {
      opacity: 1;
    }

    .remove-btn:hover {
      background: var(--danger-color);
      color: white;
      transform: scale(1.1);
    }

    .item-content {
      padding: 1.5rem;
    }

    .item-title {
      font-size: 1.125rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: #111827;
    }

    .item-title a {
      color: inherit;
      text-decoration: none;
      transition: color 0.2s ease;
    }

    .item-title a:hover {
      color: var(--primary-color);
    }

    .item-price {
      font-size: 1.25rem;
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 1rem;
    }

    .original-price {
      text-decoration: line-through;
      color: var(--secondary-color);
      font-weight: 400;
      font-size: 1rem;
      margin-left: 0.5rem;
    }

    .item-actions {
      display: flex;
      gap: 0.75rem;
    }

    .btn {
      padding: 0.75rem 1rem;
      border: none;
      border-radius: var(--border-radius);
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      font-size: 0.875rem;
    }

    .btn-primary {
      background: var(--primary-color);
      color: white;
      flex: 1;
    }

    .btn-primary:hover {
      background: var(--primary-hover);
      transform: translateY(-1px);
    }

    .btn-outline {
      background: white;
      color: var(--dark-gray);
      border: 2px solid var(--medium-gray);
      flex: 1;
    }

    .btn-outline:hover {
      border-color: var(--primary-color);
      color: var(--primary-color);
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
    }

    .empty-icon {
      font-size: 4rem;
      color: var(--medium-gray);
      margin-bottom: 1.5rem;
    }

    .empty-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: #111827;
    }

    .empty-text {
      color: var(--secondary-color);
      margin-bottom: 2rem;
    }

    /* Overlay */
    .sidebar-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .sidebar-overlay.active {
      opacity: 1;
      visibility: visible;
    }

    /* Responsive Design */
    @media (min-width: 768px) {
      .sidebar {
        transform: translateX(0);
        position: relative;
      }

      .main-content {
        margin-left: var(--sidebar-width);
      }

      .sidebar-toggle {
        display: none;
      }

      .sidebar-overlay {
        display: none;
      }
    }

    @media (max-width: 767px) {
      .content {
        padding: 1rem;
      }

      .wishlist-header {
        padding: 1.5rem;
      }

      .wishlist-grid {
        grid-template-columns: 1fr;
      }

      .wishlist-stats {
        grid-template-columns: repeat(2, 1fr);
      }

      .item-actions {
        flex-direction: column;
      }
    }

    @media (max-width: 575px) {
      .wishlist-stats {
        grid-template-columns: 1fr;
      }

      .stat-card {
        padding: 1rem;
      }
    }
  </style>
</head>

<body>
  <!-- Sidebar -->
  <nav class="sidebar" id="sidebar">
    <div class="sidebar-header">
      <a href="/" class="sidebar-brand">
        <i class="fas fa-store me-2"></i>
        MyStore
      </a>
    </div>
    <div class="sidebar-nav">
      <div class="nav-item">
        <a href="/user/dashboard" class="nav-link">
          <i class="fas fa-tachometer-alt"></i>
          Dashboard
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/profile" class="nav-link">
          <i class="fas fa-user"></i>
          Profile
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/orders" class="nav-link">
          <i class="fas fa-shopping-bag"></i>
          Orders
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/wishlist" class="nav-link active">
          <i class="fas fa-heart"></i>
          Wishlist
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/wallet" class="nav-link">
          <i class="fas fa-wallet"></i>
          Wallet
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/addresses" class="nav-link">
          <i class="fas fa-map-marker-alt"></i>
          Addresses
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/settings" class="nav-link">
          <i class="fas fa-cog"></i>
          Settings
        </a>
      </div>
      <div class="nav-item">
        <a href="/user/logout" class="nav-link">
          <i class="fas fa-sign-out-alt"></i>
          Logout
        </a>
      </div>
    </div>
  </nav>

  <!-- Sidebar Overlay -->
  <div class="sidebar-overlay" id="sidebarOverlay"></div>

  <!-- Main Content -->
  <div class="main-content" id="mainContent">
    <!-- Header -->
    <header class="header">
      <div class="header-content">
        <div class="d-flex align-items-center">
          <button class="sidebar-toggle" id="sidebarToggle">
            <i class="fas fa-bars"></i>
          </button>
          <h1 class="page-title">My Wishlist</h1>
        </div>
        <div class="d-flex align-items-center gap-3">
          <span class="text-muted">Welcome, <%= user?.name || 'User' %></span>
        </div>
      </div>
    </header>

    <!-- Content -->
    <main class="content">
      <!-- Wishlist Header -->
      <div class="wishlist-header">
        <h2 class="mb-3">Your Favorite Items</h2>
        <p class="text-muted mb-0">Keep track of products you love and want to purchase later.</p>
        
        <div class="wishlist-stats">
          <div class="stat-card">
            <div class="stat-number" id="totalItems"><%= wishlistItems?.length || 0 %></div>
            <div class="stat-label">Total Items</div>
          </div>
          <div class="stat-card">
            <div class="stat-number" id="totalValue">
              ₹<%= wishlistItems?.reduce((sum, item) => sum + (item.product.salePrice || item.product.regularPrice), 0).toFixed(2) || '0.00' %>
            </div>
            <div class="stat-label">Total Value</div>
          </div>
          <div class="stat-card">
            <div class="stat-number" id="availableItems">
              <%= wishlistItems?.filter(item => item.product.stock > 0).length || 0 %>
            </div>
            <div class="stat-label">In Stock</div>
          </div>
        </div>
      </div>

      <!-- Wishlist Items -->
      <% if (wishlistItems && wishlistItems.length > 0) { %>
        <div class="wishlist-grid" id="wishlistGrid">
          <% wishlistItems.forEach(item => { %>
            <div class="wishlist-item" data-item-id="<%= item._id %>">
              <div class="item-image">
                <img 
                  src="<%= item.product.images?.length ? item.product.images[0] : '/img/product/no-image.jpg' %>" 
                  alt="<%= item.product.name %>"
                />
                <button class="remove-btn" onclick="removeFromWishlist('<%= item._id %>')">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              <div class="item-content">
                <h3 class="item-title">
                  <a href="/user/products/<%= item.product._id %>">
                    <%= item.product.name %>
                  </a>
                </h3>
                <div class="item-price">
                  <% if (item.product.salePrice && item.product.salePrice < item.product.regularPrice) { %>
                    ₹<%= item.product.salePrice.toFixed(2) %>
                    <span class="original-price">₹<%= item.product.regularPrice.toFixed(2) %></span>
                  <% } else { %>
                    ₹<%= item.product.regularPrice.toFixed(2) %>
                  <% } %>
                </div>
                <div class="item-actions">
                  <% if (item.product.stock > 0) { %>
                    <button class="btn btn-primary" onclick="addToCart('<%= item.product._id %>')">
                      <i class="fas fa-shopping-cart me-2"></i>
                      Add to Cart
                    </button>
                  <% } else { %>
                    <button class="btn btn-outline" disabled>
                      <i class="fas fa-times me-2"></i>
                      Out of Stock
                    </button>
                  <% } %>
                  <a href="/user/products/<%= item.product._id %>" class="btn btn-outline">
                    <i class="fas fa-eye me-2"></i>
                    View Details
                  </a>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <!-- Empty State -->
        <div class="empty-state">
          <div class="empty-icon">
            <i class="far fa-heart"></i>
          </div>
          <h3 class="empty-title">Your wishlist is empty</h3>
          <p class="empty-text">
            Start adding products you love to your wishlist and keep track of them here.
          </p>
          <a href="/user/products/shop" class="btn btn-primary">
            <i class="fas fa-shopping-bag me-2"></i>
            Start Shopping
          </a>
        </div>
      <% } %>
    </main>
  </div>

  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  
  <script>
    const BASE_URL = window.location.origin;

    // Sidebar functionality
    document.addEventListener('DOMContentLoaded', function() {
      const sidebar = document.getElementById('sidebar');
      const sidebarToggle = document.getElementById('sidebarToggle');
      const sidebarOverlay = document.getElementById('sidebarOverlay');
      const mainContent = document.getElementById('mainContent');

      function toggleSidebar() {
        sidebar.classList.toggle('active');
        sidebarOverlay.classList.toggle('active');
        mainContent.classList.toggle('sidebar-open');
      }

      if (sidebarToggle) {
        sidebarToggle.addEventListener('click', toggleSidebar);
      }

      if (sidebarOverlay) {
        sidebarOverlay.addEventListener('click', toggleSidebar);
      }

      // Close sidebar on escape key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && sidebar.classList.contains('active')) {
          toggleSidebar();
        }
      });
    });

    // Remove from wishlist
    async function removeFromWishlist(itemId) {
      if (!confirm('Are you sure you want to remove this item from your wishlist?')) {
        return;
      }

      try {
        const response = await fetch(`${BASE_URL}/user/wishlist/api/remove/${itemId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const result = await response.json();

        if (response.ok) {
          // Remove item from DOM
          const itemElement = document.querySelector(`[data-item-id="${itemId}"]`);
          if (itemElement) {
            itemElement.style.transform = 'scale(0)';
            itemElement.style.opacity = '0';
            setTimeout(() => {
              itemElement.remove();
              updateWishlistStats();
              checkEmptyState();
            }, 300);
          }
          
          showNotification('Item removed from wishlist', 'success');
        } else {
          showNotification(result.message || 'Failed to remove item', 'error');
        }
      } catch (error) {
        console.error('Error removing from wishlist:', error);
        showNotification('Error removing item from wishlist', 'error');
      }
    }

    // Add to cart
    async function addToCart(productId) {
      try {
        const response = await fetch(`${BASE_URL}/user/cart/api/add/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            quantity: 1,
            variant: {}
          })
        });

        const result = await response.json();

        if (response.ok) {
          showNotification('Item added to cart successfully', 'success');
          updateCartCount();
        } else {
          showNotification(result.message || 'Failed to add item to cart', 'error');
        }
      } catch (error) {
        console.error('Error adding to cart:', error);
        if (error.message.includes('401')) {
          window.location.href = '/user/login';
        } else {
          showNotification('Error adding item to cart', 'error');
        }
      }
    }

    // Update wishlist statistics
    function updateWishlistStats() {
      const items = document.querySelectorAll('.wishlist-item');
      const totalItems = items.length;
      
      let totalValue = 0;
      let availableItems = 0;

      items.forEach(item => {
        const priceElement = item.querySelector('.item-price');
        const priceText = priceElement.textContent.replace('₹', '').split(' ')[0];
        const price = parseFloat(priceText);
        
        if (!isNaN(price)) {
          totalValue += price;
        }

        const addToCartBtn = item.querySelector('.btn-primary');
        if (addToCartBtn && !addToCartBtn.disabled) {
          availableItems++;
        }
      });

      document.getElementById('totalItems').textContent = totalItems;
      document.getElementById('totalValue').textContent = '₹' + totalValue.toFixed(2);
      document.getElementById('availableItems').textContent = availableItems;
    }

    // Check if wishlist is empty and show empty state
    function checkEmptyState() {
      const wishlistGrid = document.getElementById('wishlistGrid');
      const items = document.querySelectorAll('.wishlist-item');
      
      if (items.length === 0) {
        wishlistGrid.innerHTML = `
          <div class="empty-state" style="grid-column: 1 / -1;">
            <div class="empty-icon">
              <i class="far fa-heart"></i>
            </div>
            <h3 class="empty-title">Your wishlist is empty</h3>
            <p class="empty-text">
              Start adding products you love to your wishlist and keep track of them here.
            </p>
            <a href="/user/products/shop" class="btn btn-primary">
              <i class="fas fa-shopping-bag me-2"></i>
              Start Shopping
            </a>
          </div>
        `;
      }
    }

    // Update cart count in header
    async function updateCartCount() {
      try {
        const response = await fetch(`${BASE_URL}/user/cart/api/count`);
        const result = await response.json();
        
        if (response.ok) {
          const cartCountElement = document.getElementById('HeadercartCount');
          if (cartCountElement) {
            cartCountElement.textContent = result.count;
          }
        }
      } catch (error) {
        console.error('Error updating cart count:', error);
      }
    }

    // Show notification
    function showNotification(message, type = 'info') {
      // Create notification element
      const notification = document.createElement('div');
      notification.className = `alert alert-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info'} position-fixed`;
      notification.style.cssText = `
        top: 20px;
        right: 20px;
        z-index: 9999;
        min-width: 300px;
        animation: slideIn 0.3s ease;
      `;
      notification.innerHTML = `
        <div class="d-flex align-items-center">
          <i class="fas fa-${type === 'error' ? 'exclamation-circle' : type === 'success' ? 'check-circle' : 'info-circle'} me-2"></i>
          ${message}
          <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
        </div>
      `;

      // Add to page
      document.body.appendChild(notification);

      // Auto remove after 5 seconds
      setTimeout(() => {
        if (notification.parentElement) {
          notification.remove();
        }
      }, 5000);
    }

    // Add CSS animation
    const style = document.createElement('style');
    style.textContent = `
      @keyframes slideIn {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
    `;
    document.head.appendChild(style);
  </script>
</body>
</html>
